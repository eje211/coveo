Index.PACKAGES = {"com" : [], "com.regularoddity" : [], "com.regularoddity.coveo" : [{"name" : "com.regularoddity.coveo.City", "shortDescription" : "A representation a result row from the cities_v table of the database.", "members_case class" : [{"member" : "com.regularoddity.coveo.City#<init>", "error" : "unsupported entity"}, {"label" : "score", "tail" : ": Double", "member" : "com.regularoddity.coveo.City.score", "link" : "com\/regularoddity\/coveo\/City.html#score:Double", "kind" : "val"}, {"label" : "distance", "tail" : ": Double", "member" : "com.regularoddity.coveo.City.distance", "link" : "com\/regularoddity\/coveo\/City.html#distance:Double", "kind" : "val"}, {"label" : "coordinates", "tail" : ": PGpoint", "member" : "com.regularoddity.coveo.City.coordinates", "link" : "com\/regularoddity\/coveo\/City.html#coordinates:org.postgresql.geometric.PGpoint", "kind" : "val"}, {"label" : "countryCode", "tail" : ": String", "member" : "com.regularoddity.coveo.City.countryCode", "link" : "com\/regularoddity\/coveo\/City.html#countryCode:String", "kind" : "val"}, {"label" : "fullName", "tail" : ": String", "member" : "com.regularoddity.coveo.City.fullName", "link" : "com\/regularoddity\/coveo\/City.html#fullName:String", "kind" : "val"}, {"label" : "stateProvince", "tail" : ": String", "member" : "com.regularoddity.coveo.City.stateProvince", "link" : "com\/regularoddity\/coveo\/City.html#stateProvince:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "com.regularoddity.coveo.City.name", "link" : "com\/regularoddity\/coveo\/City.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": Long", "member" : "com.regularoddity.coveo.City.id", "link" : "com\/regularoddity\/coveo\/City.html#id:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/City.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/City.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/City.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/City.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/City.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/City.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/City.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/City.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/City.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/City.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/City.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/City.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/regularoddity\/coveo\/City.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/City.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/City.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/City.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/regularoddity\/coveo\/City.html", "kind" : "case class"}, {"name" : "com.regularoddity.coveo.CityProtocol", "shortDescription" : "The implementation of the Slick conversations between JSON and various types related to City.", "object" : "com\/regularoddity\/coveo\/CityProtocol$.html", "members_object" : [{"label" : "RootJsArrayFormat", "tail" : "", "member" : "spray.json.AdditionalFormats.RootJsArrayFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#RootJsArrayFormat", "kind" : "implicit object"}, {"label" : "RootJsObjectFormat", "tail" : "", "member" : "spray.json.AdditionalFormats.RootJsObjectFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#RootJsObjectFormat", "kind" : "implicit object"}, {"label" : "JsValueFormat", "tail" : "", "member" : "spray.json.AdditionalFormats.JsValueFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#JsValueFormat", "kind" : "implicit object"}, {"label" : "OptionFormat", "tail" : "", "member" : "spray.json.StandardFormats.OptionFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#OptionFormat[T<:<?>]extendsStandardFormats.this.JF[Option[T]]", "kind" : "class"}, {"label" : "SymbolJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.SymbolJsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#SymbolJsonFormat", "kind" : "implicit object"}, {"label" : "StringJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.StringJsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#StringJsonFormat", "kind" : "implicit object"}, {"label" : "CharJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.CharJsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#CharJsonFormat", "kind" : "implicit object"}, {"label" : "BooleanJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.BooleanJsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#BooleanJsonFormat", "kind" : "implicit object"}, {"label" : "UnitJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.UnitJsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#UnitJsonFormat", "kind" : "implicit object"}, {"label" : "BigIntJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.BigIntJsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#BigIntJsonFormat", "kind" : "implicit object"}, {"label" : "BigDecimalJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.BigDecimalJsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#BigDecimalJsonFormat", "kind" : "implicit object"}, {"label" : "ShortJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.ShortJsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#ShortJsonFormat", "kind" : "implicit object"}, {"label" : "ByteJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.ByteJsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#ByteJsonFormat", "kind" : "implicit object"}, {"label" : "DoubleJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.DoubleJsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#DoubleJsonFormat", "kind" : "implicit object"}, {"label" : "FloatJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.FloatJsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#FloatJsonFormat", "kind" : "implicit object"}, {"label" : "LongJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.LongJsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#LongJsonFormat", "kind" : "implicit object"}, {"label" : "IntJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.IntJsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#IntJsonFormat", "kind" : "implicit object"}, {"label" : "CitiesJsonFormat", "tail" : "", "member" : "com.regularoddity.coveo.CityProtocol.CitiesJsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#CitiesJsonFormat", "kind" : "implicit object"}, {"label" : "CityJsonFormat", "tail" : "", "member" : "com.regularoddity.coveo.CityProtocol.CityJsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#CityJsonFormat", "kind" : "implicit object"}, {"label" : "safeReader", "tail" : "(arg0: JsonReader[A]): JsonReader[Either[Exception, A]]", "member" : "spray.json.AdditionalFormats.safeReader", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#safeReader[A](implicitevidence$1:spray.json.JsonReader[A]):spray.json.JsonReader[Either[Exception,A]]", "kind" : "def"}, {"label" : "lazyFormat", "tail" : "(format: ⇒ JsonFormat[T]): JsonFormat[T] { lazy val delegate: spray.json.JsonFormat[T] }", "member" : "spray.json.AdditionalFormats.lazyFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#lazyFormat[T](format:=>spray.json.JsonFormat[T]):spray.json.JsonFormat[T]{lazyvaldelegate:spray.json.JsonFormat[T]}", "kind" : "def"}, {"label" : "lift", "tail" : "(reader: RootJsonReader[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.lift", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#lift[T<:AnyRef](reader:spray.json.RootJsonReader[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "lift", "tail" : "(reader: JsonReader[T]): JsonFormat[T]", "member" : "spray.json.AdditionalFormats.lift", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#lift[T<:AnyRef](reader:spray.json.JsonReader[T]):spray.json.JsonFormat[T]", "kind" : "def"}, {"label" : "lift", "tail" : "(writer: RootJsonWriter[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.lift", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#lift[T](writer:spray.json.RootJsonWriter[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "lift", "tail" : "(writer: JsonWriter[T]): JsonFormat[T] { def read(value: spray.json.JsValue): Nothing }", "member" : "spray.json.AdditionalFormats.lift", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#lift[T](writer:spray.json.JsonWriter[T]):spray.json.JsonFormat[T]{defread(value:spray.json.JsValue):Nothing}", "kind" : "def"}, {"label" : "rootFormat", "tail" : "(format: JsonFormat[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.rootFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#rootFormat[T](format:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "rootJsonFormat", "tail" : "(reader: RootJsonReader[T], writer: RootJsonWriter[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.rootJsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#rootJsonFormat[T](reader:spray.json.RootJsonReader[T],writer:spray.json.RootJsonWriter[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(reader: JsonReader[T], writer: JsonWriter[T]): JsonFormat[T]", "member" : "spray.json.AdditionalFormats.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[T](reader:spray.json.JsonReader[T],writer:spray.json.JsonWriter[T]):spray.json.JsonFormat[T]", "kind" : "def"}, {"label" : "extractFieldNames", "tail" : "(classManifest: ClassManifest[_]): Array[String]", "member" : "spray.json.ProductFormats.extractFieldNames", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#extractFieldNames(classManifest:ClassManifest[_]):Array[String]", "kind" : "def"}, {"label" : "fromField", "tail" : "(value: JsValue, fieldName: String)(reader: JsonReader[T]): T", "member" : "spray.json.ProductFormats.fromField", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#fromField[T](value:spray.json.JsValue,fieldName:String)(implicitreader:spray.json.JsonReader[T]):T", "kind" : "def"}, {"label" : "productElement2Field", "tail" : "(fieldName: String, p: Product, ix: Int, rest: List[JsField])(writer: JsonWriter[T]): List[JsField]", "member" : "spray.json.ProductFormats.productElement2Field", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#productElement2Field[T](fieldName:String,p:Product,ix:Int,rest:List[spray.json.JsField])(implicitwriter:spray.json.JsonWriter[T]):List[spray.json.JsField]", "kind" : "def"}, {"label" : "jsonFormat0", "tail" : "(construct: () ⇒ T): RootJsonFormat[T]", "member" : "spray.json.ProductFormats.jsonFormat0", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat0[T](construct:()=>T):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21, P22) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String, fieldName20: String, fieldName21: String, fieldName22: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21], arg21: JF[P22]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String,fieldName20:String,fieldName21:String,fieldName22:String)(implicitevidence$507:ProductFormatsInstances.this.JF[P1],implicitevidence$508:ProductFormatsInstances.this.JF[P2],implicitevidence$509:ProductFormatsInstances.this.JF[P3],implicitevidence$510:ProductFormatsInstances.this.JF[P4],implicitevidence$511:ProductFormatsInstances.this.JF[P5],implicitevidence$512:ProductFormatsInstances.this.JF[P6],implicitevidence$513:ProductFormatsInstances.this.JF[P7],implicitevidence$514:ProductFormatsInstances.this.JF[P8],implicitevidence$515:ProductFormatsInstances.this.JF[P9],implicitevidence$516:ProductFormatsInstances.this.JF[P10],implicitevidence$517:ProductFormatsInstances.this.JF[P11],implicitevidence$518:ProductFormatsInstances.this.JF[P12],implicitevidence$519:ProductFormatsInstances.this.JF[P13],implicitevidence$520:ProductFormatsInstances.this.JF[P14],implicitevidence$521:ProductFormatsInstances.this.JF[P15],implicitevidence$522:ProductFormatsInstances.this.JF[P16],implicitevidence$523:ProductFormatsInstances.this.JF[P17],implicitevidence$524:ProductFormatsInstances.this.JF[P18],implicitevidence$525:ProductFormatsInstances.this.JF[P19],implicitevidence$526:ProductFormatsInstances.this.JF[P20],implicitevidence$527:ProductFormatsInstances.this.JF[P21],implicitevidence$528:ProductFormatsInstances.this.JF[P22]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat22", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21, P22) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21], arg21: JF[P22], arg22: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat22", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat22[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22)=>T)(implicitevidence$484:ProductFormatsInstances.this.JF[P1],implicitevidence$485:ProductFormatsInstances.this.JF[P2],implicitevidence$486:ProductFormatsInstances.this.JF[P3],implicitevidence$487:ProductFormatsInstances.this.JF[P4],implicitevidence$488:ProductFormatsInstances.this.JF[P5],implicitevidence$489:ProductFormatsInstances.this.JF[P6],implicitevidence$490:ProductFormatsInstances.this.JF[P7],implicitevidence$491:ProductFormatsInstances.this.JF[P8],implicitevidence$492:ProductFormatsInstances.this.JF[P9],implicitevidence$493:ProductFormatsInstances.this.JF[P10],implicitevidence$494:ProductFormatsInstances.this.JF[P11],implicitevidence$495:ProductFormatsInstances.this.JF[P12],implicitevidence$496:ProductFormatsInstances.this.JF[P13],implicitevidence$497:ProductFormatsInstances.this.JF[P14],implicitevidence$498:ProductFormatsInstances.this.JF[P15],implicitevidence$499:ProductFormatsInstances.this.JF[P16],implicitevidence$500:ProductFormatsInstances.this.JF[P17],implicitevidence$501:ProductFormatsInstances.this.JF[P18],implicitevidence$502:ProductFormatsInstances.this.JF[P19],implicitevidence$503:ProductFormatsInstances.this.JF[P20],implicitevidence$504:ProductFormatsInstances.this.JF[P21],implicitevidence$505:ProductFormatsInstances.this.JF[P22],implicitevidence$506:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String, fieldName20: String, fieldName21: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String,fieldName20:String,fieldName21:String)(implicitevidence$463:ProductFormatsInstances.this.JF[P1],implicitevidence$464:ProductFormatsInstances.this.JF[P2],implicitevidence$465:ProductFormatsInstances.this.JF[P3],implicitevidence$466:ProductFormatsInstances.this.JF[P4],implicitevidence$467:ProductFormatsInstances.this.JF[P5],implicitevidence$468:ProductFormatsInstances.this.JF[P6],implicitevidence$469:ProductFormatsInstances.this.JF[P7],implicitevidence$470:ProductFormatsInstances.this.JF[P8],implicitevidence$471:ProductFormatsInstances.this.JF[P9],implicitevidence$472:ProductFormatsInstances.this.JF[P10],implicitevidence$473:ProductFormatsInstances.this.JF[P11],implicitevidence$474:ProductFormatsInstances.this.JF[P12],implicitevidence$475:ProductFormatsInstances.this.JF[P13],implicitevidence$476:ProductFormatsInstances.this.JF[P14],implicitevidence$477:ProductFormatsInstances.this.JF[P15],implicitevidence$478:ProductFormatsInstances.this.JF[P16],implicitevidence$479:ProductFormatsInstances.this.JF[P17],implicitevidence$480:ProductFormatsInstances.this.JF[P18],implicitevidence$481:ProductFormatsInstances.this.JF[P19],implicitevidence$482:ProductFormatsInstances.this.JF[P20],implicitevidence$483:ProductFormatsInstances.this.JF[P21]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat21", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21], arg21: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat21", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat21[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21)=>T)(implicitevidence$441:ProductFormatsInstances.this.JF[P1],implicitevidence$442:ProductFormatsInstances.this.JF[P2],implicitevidence$443:ProductFormatsInstances.this.JF[P3],implicitevidence$444:ProductFormatsInstances.this.JF[P4],implicitevidence$445:ProductFormatsInstances.this.JF[P5],implicitevidence$446:ProductFormatsInstances.this.JF[P6],implicitevidence$447:ProductFormatsInstances.this.JF[P7],implicitevidence$448:ProductFormatsInstances.this.JF[P8],implicitevidence$449:ProductFormatsInstances.this.JF[P9],implicitevidence$450:ProductFormatsInstances.this.JF[P10],implicitevidence$451:ProductFormatsInstances.this.JF[P11],implicitevidence$452:ProductFormatsInstances.this.JF[P12],implicitevidence$453:ProductFormatsInstances.this.JF[P13],implicitevidence$454:ProductFormatsInstances.this.JF[P14],implicitevidence$455:ProductFormatsInstances.this.JF[P15],implicitevidence$456:ProductFormatsInstances.this.JF[P16],implicitevidence$457:ProductFormatsInstances.this.JF[P17],implicitevidence$458:ProductFormatsInstances.this.JF[P18],implicitevidence$459:ProductFormatsInstances.this.JF[P19],implicitevidence$460:ProductFormatsInstances.this.JF[P20],implicitevidence$461:ProductFormatsInstances.this.JF[P21],implicitevidence$462:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String, fieldName20: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String,fieldName20:String)(implicitevidence$421:ProductFormatsInstances.this.JF[P1],implicitevidence$422:ProductFormatsInstances.this.JF[P2],implicitevidence$423:ProductFormatsInstances.this.JF[P3],implicitevidence$424:ProductFormatsInstances.this.JF[P4],implicitevidence$425:ProductFormatsInstances.this.JF[P5],implicitevidence$426:ProductFormatsInstances.this.JF[P6],implicitevidence$427:ProductFormatsInstances.this.JF[P7],implicitevidence$428:ProductFormatsInstances.this.JF[P8],implicitevidence$429:ProductFormatsInstances.this.JF[P9],implicitevidence$430:ProductFormatsInstances.this.JF[P10],implicitevidence$431:ProductFormatsInstances.this.JF[P11],implicitevidence$432:ProductFormatsInstances.this.JF[P12],implicitevidence$433:ProductFormatsInstances.this.JF[P13],implicitevidence$434:ProductFormatsInstances.this.JF[P14],implicitevidence$435:ProductFormatsInstances.this.JF[P15],implicitevidence$436:ProductFormatsInstances.this.JF[P16],implicitevidence$437:ProductFormatsInstances.this.JF[P17],implicitevidence$438:ProductFormatsInstances.this.JF[P18],implicitevidence$439:ProductFormatsInstances.this.JF[P19],implicitevidence$440:ProductFormatsInstances.this.JF[P20]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat20", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat20", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat20[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20)=>T)(implicitevidence$400:ProductFormatsInstances.this.JF[P1],implicitevidence$401:ProductFormatsInstances.this.JF[P2],implicitevidence$402:ProductFormatsInstances.this.JF[P3],implicitevidence$403:ProductFormatsInstances.this.JF[P4],implicitevidence$404:ProductFormatsInstances.this.JF[P5],implicitevidence$405:ProductFormatsInstances.this.JF[P6],implicitevidence$406:ProductFormatsInstances.this.JF[P7],implicitevidence$407:ProductFormatsInstances.this.JF[P8],implicitevidence$408:ProductFormatsInstances.this.JF[P9],implicitevidence$409:ProductFormatsInstances.this.JF[P10],implicitevidence$410:ProductFormatsInstances.this.JF[P11],implicitevidence$411:ProductFormatsInstances.this.JF[P12],implicitevidence$412:ProductFormatsInstances.this.JF[P13],implicitevidence$413:ProductFormatsInstances.this.JF[P14],implicitevidence$414:ProductFormatsInstances.this.JF[P15],implicitevidence$415:ProductFormatsInstances.this.JF[P16],implicitevidence$416:ProductFormatsInstances.this.JF[P17],implicitevidence$417:ProductFormatsInstances.this.JF[P18],implicitevidence$418:ProductFormatsInstances.this.JF[P19],implicitevidence$419:ProductFormatsInstances.this.JF[P20],implicitevidence$420:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String)(implicitevidence$381:ProductFormatsInstances.this.JF[P1],implicitevidence$382:ProductFormatsInstances.this.JF[P2],implicitevidence$383:ProductFormatsInstances.this.JF[P3],implicitevidence$384:ProductFormatsInstances.this.JF[P4],implicitevidence$385:ProductFormatsInstances.this.JF[P5],implicitevidence$386:ProductFormatsInstances.this.JF[P6],implicitevidence$387:ProductFormatsInstances.this.JF[P7],implicitevidence$388:ProductFormatsInstances.this.JF[P8],implicitevidence$389:ProductFormatsInstances.this.JF[P9],implicitevidence$390:ProductFormatsInstances.this.JF[P10],implicitevidence$391:ProductFormatsInstances.this.JF[P11],implicitevidence$392:ProductFormatsInstances.this.JF[P12],implicitevidence$393:ProductFormatsInstances.this.JF[P13],implicitevidence$394:ProductFormatsInstances.this.JF[P14],implicitevidence$395:ProductFormatsInstances.this.JF[P15],implicitevidence$396:ProductFormatsInstances.this.JF[P16],implicitevidence$397:ProductFormatsInstances.this.JF[P17],implicitevidence$398:ProductFormatsInstances.this.JF[P18],implicitevidence$399:ProductFormatsInstances.this.JF[P19]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat19", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat19", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat19[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19)=>T)(implicitevidence$361:ProductFormatsInstances.this.JF[P1],implicitevidence$362:ProductFormatsInstances.this.JF[P2],implicitevidence$363:ProductFormatsInstances.this.JF[P3],implicitevidence$364:ProductFormatsInstances.this.JF[P4],implicitevidence$365:ProductFormatsInstances.this.JF[P5],implicitevidence$366:ProductFormatsInstances.this.JF[P6],implicitevidence$367:ProductFormatsInstances.this.JF[P7],implicitevidence$368:ProductFormatsInstances.this.JF[P8],implicitevidence$369:ProductFormatsInstances.this.JF[P9],implicitevidence$370:ProductFormatsInstances.this.JF[P10],implicitevidence$371:ProductFormatsInstances.this.JF[P11],implicitevidence$372:ProductFormatsInstances.this.JF[P12],implicitevidence$373:ProductFormatsInstances.this.JF[P13],implicitevidence$374:ProductFormatsInstances.this.JF[P14],implicitevidence$375:ProductFormatsInstances.this.JF[P15],implicitevidence$376:ProductFormatsInstances.this.JF[P16],implicitevidence$377:ProductFormatsInstances.this.JF[P17],implicitevidence$378:ProductFormatsInstances.this.JF[P18],implicitevidence$379:ProductFormatsInstances.this.JF[P19],implicitevidence$380:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String)(implicitevidence$343:ProductFormatsInstances.this.JF[P1],implicitevidence$344:ProductFormatsInstances.this.JF[P2],implicitevidence$345:ProductFormatsInstances.this.JF[P3],implicitevidence$346:ProductFormatsInstances.this.JF[P4],implicitevidence$347:ProductFormatsInstances.this.JF[P5],implicitevidence$348:ProductFormatsInstances.this.JF[P6],implicitevidence$349:ProductFormatsInstances.this.JF[P7],implicitevidence$350:ProductFormatsInstances.this.JF[P8],implicitevidence$351:ProductFormatsInstances.this.JF[P9],implicitevidence$352:ProductFormatsInstances.this.JF[P10],implicitevidence$353:ProductFormatsInstances.this.JF[P11],implicitevidence$354:ProductFormatsInstances.this.JF[P12],implicitevidence$355:ProductFormatsInstances.this.JF[P13],implicitevidence$356:ProductFormatsInstances.this.JF[P14],implicitevidence$357:ProductFormatsInstances.this.JF[P15],implicitevidence$358:ProductFormatsInstances.this.JF[P16],implicitevidence$359:ProductFormatsInstances.this.JF[P17],implicitevidence$360:ProductFormatsInstances.this.JF[P18]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat18", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat18", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat18[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18)=>T)(implicitevidence$324:ProductFormatsInstances.this.JF[P1],implicitevidence$325:ProductFormatsInstances.this.JF[P2],implicitevidence$326:ProductFormatsInstances.this.JF[P3],implicitevidence$327:ProductFormatsInstances.this.JF[P4],implicitevidence$328:ProductFormatsInstances.this.JF[P5],implicitevidence$329:ProductFormatsInstances.this.JF[P6],implicitevidence$330:ProductFormatsInstances.this.JF[P7],implicitevidence$331:ProductFormatsInstances.this.JF[P8],implicitevidence$332:ProductFormatsInstances.this.JF[P9],implicitevidence$333:ProductFormatsInstances.this.JF[P10],implicitevidence$334:ProductFormatsInstances.this.JF[P11],implicitevidence$335:ProductFormatsInstances.this.JF[P12],implicitevidence$336:ProductFormatsInstances.this.JF[P13],implicitevidence$337:ProductFormatsInstances.this.JF[P14],implicitevidence$338:ProductFormatsInstances.this.JF[P15],implicitevidence$339:ProductFormatsInstances.this.JF[P16],implicitevidence$340:ProductFormatsInstances.this.JF[P17],implicitevidence$341:ProductFormatsInstances.this.JF[P18],implicitevidence$342:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String)(implicitevidence$307:ProductFormatsInstances.this.JF[P1],implicitevidence$308:ProductFormatsInstances.this.JF[P2],implicitevidence$309:ProductFormatsInstances.this.JF[P3],implicitevidence$310:ProductFormatsInstances.this.JF[P4],implicitevidence$311:ProductFormatsInstances.this.JF[P5],implicitevidence$312:ProductFormatsInstances.this.JF[P6],implicitevidence$313:ProductFormatsInstances.this.JF[P7],implicitevidence$314:ProductFormatsInstances.this.JF[P8],implicitevidence$315:ProductFormatsInstances.this.JF[P9],implicitevidence$316:ProductFormatsInstances.this.JF[P10],implicitevidence$317:ProductFormatsInstances.this.JF[P11],implicitevidence$318:ProductFormatsInstances.this.JF[P12],implicitevidence$319:ProductFormatsInstances.this.JF[P13],implicitevidence$320:ProductFormatsInstances.this.JF[P14],implicitevidence$321:ProductFormatsInstances.this.JF[P15],implicitevidence$322:ProductFormatsInstances.this.JF[P16],implicitevidence$323:ProductFormatsInstances.this.JF[P17]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat17", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat17", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat17[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17)=>T)(implicitevidence$289:ProductFormatsInstances.this.JF[P1],implicitevidence$290:ProductFormatsInstances.this.JF[P2],implicitevidence$291:ProductFormatsInstances.this.JF[P3],implicitevidence$292:ProductFormatsInstances.this.JF[P4],implicitevidence$293:ProductFormatsInstances.this.JF[P5],implicitevidence$294:ProductFormatsInstances.this.JF[P6],implicitevidence$295:ProductFormatsInstances.this.JF[P7],implicitevidence$296:ProductFormatsInstances.this.JF[P8],implicitevidence$297:ProductFormatsInstances.this.JF[P9],implicitevidence$298:ProductFormatsInstances.this.JF[P10],implicitevidence$299:ProductFormatsInstances.this.JF[P11],implicitevidence$300:ProductFormatsInstances.this.JF[P12],implicitevidence$301:ProductFormatsInstances.this.JF[P13],implicitevidence$302:ProductFormatsInstances.this.JF[P14],implicitevidence$303:ProductFormatsInstances.this.JF[P15],implicitevidence$304:ProductFormatsInstances.this.JF[P16],implicitevidence$305:ProductFormatsInstances.this.JF[P17],implicitevidence$306:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String)(implicitevidence$273:ProductFormatsInstances.this.JF[P1],implicitevidence$274:ProductFormatsInstances.this.JF[P2],implicitevidence$275:ProductFormatsInstances.this.JF[P3],implicitevidence$276:ProductFormatsInstances.this.JF[P4],implicitevidence$277:ProductFormatsInstances.this.JF[P5],implicitevidence$278:ProductFormatsInstances.this.JF[P6],implicitevidence$279:ProductFormatsInstances.this.JF[P7],implicitevidence$280:ProductFormatsInstances.this.JF[P8],implicitevidence$281:ProductFormatsInstances.this.JF[P9],implicitevidence$282:ProductFormatsInstances.this.JF[P10],implicitevidence$283:ProductFormatsInstances.this.JF[P11],implicitevidence$284:ProductFormatsInstances.this.JF[P12],implicitevidence$285:ProductFormatsInstances.this.JF[P13],implicitevidence$286:ProductFormatsInstances.this.JF[P14],implicitevidence$287:ProductFormatsInstances.this.JF[P15],implicitevidence$288:ProductFormatsInstances.this.JF[P16]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat16", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat16", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat16[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16)=>T)(implicitevidence$256:ProductFormatsInstances.this.JF[P1],implicitevidence$257:ProductFormatsInstances.this.JF[P2],implicitevidence$258:ProductFormatsInstances.this.JF[P3],implicitevidence$259:ProductFormatsInstances.this.JF[P4],implicitevidence$260:ProductFormatsInstances.this.JF[P5],implicitevidence$261:ProductFormatsInstances.this.JF[P6],implicitevidence$262:ProductFormatsInstances.this.JF[P7],implicitevidence$263:ProductFormatsInstances.this.JF[P8],implicitevidence$264:ProductFormatsInstances.this.JF[P9],implicitevidence$265:ProductFormatsInstances.this.JF[P10],implicitevidence$266:ProductFormatsInstances.this.JF[P11],implicitevidence$267:ProductFormatsInstances.this.JF[P12],implicitevidence$268:ProductFormatsInstances.this.JF[P13],implicitevidence$269:ProductFormatsInstances.this.JF[P14],implicitevidence$270:ProductFormatsInstances.this.JF[P15],implicitevidence$271:ProductFormatsInstances.this.JF[P16],implicitevidence$272:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String)(implicitevidence$241:ProductFormatsInstances.this.JF[P1],implicitevidence$242:ProductFormatsInstances.this.JF[P2],implicitevidence$243:ProductFormatsInstances.this.JF[P3],implicitevidence$244:ProductFormatsInstances.this.JF[P4],implicitevidence$245:ProductFormatsInstances.this.JF[P5],implicitevidence$246:ProductFormatsInstances.this.JF[P6],implicitevidence$247:ProductFormatsInstances.this.JF[P7],implicitevidence$248:ProductFormatsInstances.this.JF[P8],implicitevidence$249:ProductFormatsInstances.this.JF[P9],implicitevidence$250:ProductFormatsInstances.this.JF[P10],implicitevidence$251:ProductFormatsInstances.this.JF[P11],implicitevidence$252:ProductFormatsInstances.this.JF[P12],implicitevidence$253:ProductFormatsInstances.this.JF[P13],implicitevidence$254:ProductFormatsInstances.this.JF[P14],implicitevidence$255:ProductFormatsInstances.this.JF[P15]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat15", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat15", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat15[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15)=>T)(implicitevidence$225:ProductFormatsInstances.this.JF[P1],implicitevidence$226:ProductFormatsInstances.this.JF[P2],implicitevidence$227:ProductFormatsInstances.this.JF[P3],implicitevidence$228:ProductFormatsInstances.this.JF[P4],implicitevidence$229:ProductFormatsInstances.this.JF[P5],implicitevidence$230:ProductFormatsInstances.this.JF[P6],implicitevidence$231:ProductFormatsInstances.this.JF[P7],implicitevidence$232:ProductFormatsInstances.this.JF[P8],implicitevidence$233:ProductFormatsInstances.this.JF[P9],implicitevidence$234:ProductFormatsInstances.this.JF[P10],implicitevidence$235:ProductFormatsInstances.this.JF[P11],implicitevidence$236:ProductFormatsInstances.this.JF[P12],implicitevidence$237:ProductFormatsInstances.this.JF[P13],implicitevidence$238:ProductFormatsInstances.this.JF[P14],implicitevidence$239:ProductFormatsInstances.this.JF[P15],implicitevidence$240:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String)(implicitevidence$211:ProductFormatsInstances.this.JF[P1],implicitevidence$212:ProductFormatsInstances.this.JF[P2],implicitevidence$213:ProductFormatsInstances.this.JF[P3],implicitevidence$214:ProductFormatsInstances.this.JF[P4],implicitevidence$215:ProductFormatsInstances.this.JF[P5],implicitevidence$216:ProductFormatsInstances.this.JF[P6],implicitevidence$217:ProductFormatsInstances.this.JF[P7],implicitevidence$218:ProductFormatsInstances.this.JF[P8],implicitevidence$219:ProductFormatsInstances.this.JF[P9],implicitevidence$220:ProductFormatsInstances.this.JF[P10],implicitevidence$221:ProductFormatsInstances.this.JF[P11],implicitevidence$222:ProductFormatsInstances.this.JF[P12],implicitevidence$223:ProductFormatsInstances.this.JF[P13],implicitevidence$224:ProductFormatsInstances.this.JF[P14]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat14", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat14", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat14[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14)=>T)(implicitevidence$196:ProductFormatsInstances.this.JF[P1],implicitevidence$197:ProductFormatsInstances.this.JF[P2],implicitevidence$198:ProductFormatsInstances.this.JF[P3],implicitevidence$199:ProductFormatsInstances.this.JF[P4],implicitevidence$200:ProductFormatsInstances.this.JF[P5],implicitevidence$201:ProductFormatsInstances.this.JF[P6],implicitevidence$202:ProductFormatsInstances.this.JF[P7],implicitevidence$203:ProductFormatsInstances.this.JF[P8],implicitevidence$204:ProductFormatsInstances.this.JF[P9],implicitevidence$205:ProductFormatsInstances.this.JF[P10],implicitevidence$206:ProductFormatsInstances.this.JF[P11],implicitevidence$207:ProductFormatsInstances.this.JF[P12],implicitevidence$208:ProductFormatsInstances.this.JF[P13],implicitevidence$209:ProductFormatsInstances.this.JF[P14],implicitevidence$210:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String)(implicitevidence$183:ProductFormatsInstances.this.JF[P1],implicitevidence$184:ProductFormatsInstances.this.JF[P2],implicitevidence$185:ProductFormatsInstances.this.JF[P3],implicitevidence$186:ProductFormatsInstances.this.JF[P4],implicitevidence$187:ProductFormatsInstances.this.JF[P5],implicitevidence$188:ProductFormatsInstances.this.JF[P6],implicitevidence$189:ProductFormatsInstances.this.JF[P7],implicitevidence$190:ProductFormatsInstances.this.JF[P8],implicitevidence$191:ProductFormatsInstances.this.JF[P9],implicitevidence$192:ProductFormatsInstances.this.JF[P10],implicitevidence$193:ProductFormatsInstances.this.JF[P11],implicitevidence$194:ProductFormatsInstances.this.JF[P12],implicitevidence$195:ProductFormatsInstances.this.JF[P13]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat13", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat13", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat13[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13)=>T)(implicitevidence$169:ProductFormatsInstances.this.JF[P1],implicitevidence$170:ProductFormatsInstances.this.JF[P2],implicitevidence$171:ProductFormatsInstances.this.JF[P3],implicitevidence$172:ProductFormatsInstances.this.JF[P4],implicitevidence$173:ProductFormatsInstances.this.JF[P5],implicitevidence$174:ProductFormatsInstances.this.JF[P6],implicitevidence$175:ProductFormatsInstances.this.JF[P7],implicitevidence$176:ProductFormatsInstances.this.JF[P8],implicitevidence$177:ProductFormatsInstances.this.JF[P9],implicitevidence$178:ProductFormatsInstances.this.JF[P10],implicitevidence$179:ProductFormatsInstances.this.JF[P11],implicitevidence$180:ProductFormatsInstances.this.JF[P12],implicitevidence$181:ProductFormatsInstances.this.JF[P13],implicitevidence$182:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String)(implicitevidence$157:ProductFormatsInstances.this.JF[P1],implicitevidence$158:ProductFormatsInstances.this.JF[P2],implicitevidence$159:ProductFormatsInstances.this.JF[P3],implicitevidence$160:ProductFormatsInstances.this.JF[P4],implicitevidence$161:ProductFormatsInstances.this.JF[P5],implicitevidence$162:ProductFormatsInstances.this.JF[P6],implicitevidence$163:ProductFormatsInstances.this.JF[P7],implicitevidence$164:ProductFormatsInstances.this.JF[P8],implicitevidence$165:ProductFormatsInstances.this.JF[P9],implicitevidence$166:ProductFormatsInstances.this.JF[P10],implicitevidence$167:ProductFormatsInstances.this.JF[P11],implicitevidence$168:ProductFormatsInstances.this.JF[P12]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat12", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat12", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat12[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12)=>T)(implicitevidence$144:ProductFormatsInstances.this.JF[P1],implicitevidence$145:ProductFormatsInstances.this.JF[P2],implicitevidence$146:ProductFormatsInstances.this.JF[P3],implicitevidence$147:ProductFormatsInstances.this.JF[P4],implicitevidence$148:ProductFormatsInstances.this.JF[P5],implicitevidence$149:ProductFormatsInstances.this.JF[P6],implicitevidence$150:ProductFormatsInstances.this.JF[P7],implicitevidence$151:ProductFormatsInstances.this.JF[P8],implicitevidence$152:ProductFormatsInstances.this.JF[P9],implicitevidence$153:ProductFormatsInstances.this.JF[P10],implicitevidence$154:ProductFormatsInstances.this.JF[P11],implicitevidence$155:ProductFormatsInstances.this.JF[P12],implicitevidence$156:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String)(implicitevidence$133:ProductFormatsInstances.this.JF[P1],implicitevidence$134:ProductFormatsInstances.this.JF[P2],implicitevidence$135:ProductFormatsInstances.this.JF[P3],implicitevidence$136:ProductFormatsInstances.this.JF[P4],implicitevidence$137:ProductFormatsInstances.this.JF[P5],implicitevidence$138:ProductFormatsInstances.this.JF[P6],implicitevidence$139:ProductFormatsInstances.this.JF[P7],implicitevidence$140:ProductFormatsInstances.this.JF[P8],implicitevidence$141:ProductFormatsInstances.this.JF[P9],implicitevidence$142:ProductFormatsInstances.this.JF[P10],implicitevidence$143:ProductFormatsInstances.this.JF[P11]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat11", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat11", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat11[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11)=>T)(implicitevidence$121:ProductFormatsInstances.this.JF[P1],implicitevidence$122:ProductFormatsInstances.this.JF[P2],implicitevidence$123:ProductFormatsInstances.this.JF[P3],implicitevidence$124:ProductFormatsInstances.this.JF[P4],implicitevidence$125:ProductFormatsInstances.this.JF[P5],implicitevidence$126:ProductFormatsInstances.this.JF[P6],implicitevidence$127:ProductFormatsInstances.this.JF[P7],implicitevidence$128:ProductFormatsInstances.this.JF[P8],implicitevidence$129:ProductFormatsInstances.this.JF[P9],implicitevidence$130:ProductFormatsInstances.this.JF[P10],implicitevidence$131:ProductFormatsInstances.this.JF[P11],implicitevidence$132:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String)(implicitevidence$111:ProductFormatsInstances.this.JF[P1],implicitevidence$112:ProductFormatsInstances.this.JF[P2],implicitevidence$113:ProductFormatsInstances.this.JF[P3],implicitevidence$114:ProductFormatsInstances.this.JF[P4],implicitevidence$115:ProductFormatsInstances.this.JF[P5],implicitevidence$116:ProductFormatsInstances.this.JF[P6],implicitevidence$117:ProductFormatsInstances.this.JF[P7],implicitevidence$118:ProductFormatsInstances.this.JF[P8],implicitevidence$119:ProductFormatsInstances.this.JF[P9],implicitevidence$120:ProductFormatsInstances.this.JF[P10]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat10", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat10", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat10[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10)=>T)(implicitevidence$100:ProductFormatsInstances.this.JF[P1],implicitevidence$101:ProductFormatsInstances.this.JF[P2],implicitevidence$102:ProductFormatsInstances.this.JF[P3],implicitevidence$103:ProductFormatsInstances.this.JF[P4],implicitevidence$104:ProductFormatsInstances.this.JF[P5],implicitevidence$105:ProductFormatsInstances.this.JF[P6],implicitevidence$106:ProductFormatsInstances.this.JF[P7],implicitevidence$107:ProductFormatsInstances.this.JF[P8],implicitevidence$108:ProductFormatsInstances.this.JF[P9],implicitevidence$109:ProductFormatsInstances.this.JF[P10],implicitevidence$110:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String)(implicitevidence$91:ProductFormatsInstances.this.JF[P1],implicitevidence$92:ProductFormatsInstances.this.JF[P2],implicitevidence$93:ProductFormatsInstances.this.JF[P3],implicitevidence$94:ProductFormatsInstances.this.JF[P4],implicitevidence$95:ProductFormatsInstances.this.JF[P5],implicitevidence$96:ProductFormatsInstances.this.JF[P6],implicitevidence$97:ProductFormatsInstances.this.JF[P7],implicitevidence$98:ProductFormatsInstances.this.JF[P8],implicitevidence$99:ProductFormatsInstances.this.JF[P9]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat9", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat9", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat9[P1,P2,P3,P4,P5,P6,P7,P8,P9,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9)=>T)(implicitevidence$81:ProductFormatsInstances.this.JF[P1],implicitevidence$82:ProductFormatsInstances.this.JF[P2],implicitevidence$83:ProductFormatsInstances.this.JF[P3],implicitevidence$84:ProductFormatsInstances.this.JF[P4],implicitevidence$85:ProductFormatsInstances.this.JF[P5],implicitevidence$86:ProductFormatsInstances.this.JF[P6],implicitevidence$87:ProductFormatsInstances.this.JF[P7],implicitevidence$88:ProductFormatsInstances.this.JF[P8],implicitevidence$89:ProductFormatsInstances.this.JF[P9],implicitevidence$90:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String)(implicitevidence$73:ProductFormatsInstances.this.JF[P1],implicitevidence$74:ProductFormatsInstances.this.JF[P2],implicitevidence$75:ProductFormatsInstances.this.JF[P3],implicitevidence$76:ProductFormatsInstances.this.JF[P4],implicitevidence$77:ProductFormatsInstances.this.JF[P5],implicitevidence$78:ProductFormatsInstances.this.JF[P6],implicitevidence$79:ProductFormatsInstances.this.JF[P7],implicitevidence$80:ProductFormatsInstances.this.JF[P8]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat8", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat8", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat8[P1,P2,P3,P4,P5,P6,P7,P8,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8)=>T)(implicitevidence$64:ProductFormatsInstances.this.JF[P1],implicitevidence$65:ProductFormatsInstances.this.JF[P2],implicitevidence$66:ProductFormatsInstances.this.JF[P3],implicitevidence$67:ProductFormatsInstances.this.JF[P4],implicitevidence$68:ProductFormatsInstances.this.JF[P5],implicitevidence$69:ProductFormatsInstances.this.JF[P6],implicitevidence$70:ProductFormatsInstances.this.JF[P7],implicitevidence$71:ProductFormatsInstances.this.JF[P8],implicitevidence$72:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String)(implicitevidence$57:ProductFormatsInstances.this.JF[P1],implicitevidence$58:ProductFormatsInstances.this.JF[P2],implicitevidence$59:ProductFormatsInstances.this.JF[P3],implicitevidence$60:ProductFormatsInstances.this.JF[P4],implicitevidence$61:ProductFormatsInstances.this.JF[P5],implicitevidence$62:ProductFormatsInstances.this.JF[P6],implicitevidence$63:ProductFormatsInstances.this.JF[P7]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat7", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat7", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat7[P1,P2,P3,P4,P5,P6,P7,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7)=>T)(implicitevidence$49:ProductFormatsInstances.this.JF[P1],implicitevidence$50:ProductFormatsInstances.this.JF[P2],implicitevidence$51:ProductFormatsInstances.this.JF[P3],implicitevidence$52:ProductFormatsInstances.this.JF[P4],implicitevidence$53:ProductFormatsInstances.this.JF[P5],implicitevidence$54:ProductFormatsInstances.this.JF[P6],implicitevidence$55:ProductFormatsInstances.this.JF[P7],implicitevidence$56:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,P3,P4,P5,P6,T<:Product](construct:(P1,P2,P3,P4,P5,P6)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String)(implicitevidence$43:ProductFormatsInstances.this.JF[P1],implicitevidence$44:ProductFormatsInstances.this.JF[P2],implicitevidence$45:ProductFormatsInstances.this.JF[P3],implicitevidence$46:ProductFormatsInstances.this.JF[P4],implicitevidence$47:ProductFormatsInstances.this.JF[P5],implicitevidence$48:ProductFormatsInstances.this.JF[P6]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat6", "tail" : "(construct: (P1, P2, P3, P4, P5, P6) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat6", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat6[P1,P2,P3,P4,P5,P6,T<:Product](construct:(P1,P2,P3,P4,P5,P6)=>T)(implicitevidence$36:ProductFormatsInstances.this.JF[P1],implicitevidence$37:ProductFormatsInstances.this.JF[P2],implicitevidence$38:ProductFormatsInstances.this.JF[P3],implicitevidence$39:ProductFormatsInstances.this.JF[P4],implicitevidence$40:ProductFormatsInstances.this.JF[P5],implicitevidence$41:ProductFormatsInstances.this.JF[P6],implicitevidence$42:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,P3,P4,P5,T<:Product](construct:(P1,P2,P3,P4,P5)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String)(implicitevidence$31:ProductFormatsInstances.this.JF[P1],implicitevidence$32:ProductFormatsInstances.this.JF[P2],implicitevidence$33:ProductFormatsInstances.this.JF[P3],implicitevidence$34:ProductFormatsInstances.this.JF[P4],implicitevidence$35:ProductFormatsInstances.this.JF[P5]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat5", "tail" : "(construct: (P1, P2, P3, P4, P5) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat5", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat5[P1,P2,P3,P4,P5,T<:Product](construct:(P1,P2,P3,P4,P5)=>T)(implicitevidence$25:ProductFormatsInstances.this.JF[P1],implicitevidence$26:ProductFormatsInstances.this.JF[P2],implicitevidence$27:ProductFormatsInstances.this.JF[P3],implicitevidence$28:ProductFormatsInstances.this.JF[P4],implicitevidence$29:ProductFormatsInstances.this.JF[P5],implicitevidence$30:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,P3,P4,T<:Product](construct:(P1,P2,P3,P4)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String)(implicitevidence$21:ProductFormatsInstances.this.JF[P1],implicitevidence$22:ProductFormatsInstances.this.JF[P2],implicitevidence$23:ProductFormatsInstances.this.JF[P3],implicitevidence$24:ProductFormatsInstances.this.JF[P4]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat4", "tail" : "(construct: (P1, P2, P3, P4) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat4", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat4[P1,P2,P3,P4,T<:Product](construct:(P1,P2,P3,P4)=>T)(implicitevidence$16:ProductFormatsInstances.this.JF[P1],implicitevidence$17:ProductFormatsInstances.this.JF[P2],implicitevidence$18:ProductFormatsInstances.this.JF[P3],implicitevidence$19:ProductFormatsInstances.this.JF[P4],implicitevidence$20:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,P3,T<:Product](construct:(P1,P2,P3)=>T,fieldName1:String,fieldName2:String,fieldName3:String)(implicitevidence$13:ProductFormatsInstances.this.JF[P1],implicitevidence$14:ProductFormatsInstances.this.JF[P2],implicitevidence$15:ProductFormatsInstances.this.JF[P3]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat3", "tail" : "(construct: (P1, P2, P3) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat3", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat3[P1,P2,P3,T<:Product](construct:(P1,P2,P3)=>T)(implicitevidence$9:ProductFormatsInstances.this.JF[P1],implicitevidence$10:ProductFormatsInstances.this.JF[P2],implicitevidence$11:ProductFormatsInstances.this.JF[P3],implicitevidence$12:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2) ⇒ T, fieldName1: String, fieldName2: String)(arg0: JF[P1], arg1: JF[P2]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,P2,T<:Product](construct:(P1,P2)=>T,fieldName1:String,fieldName2:String)(implicitevidence$7:ProductFormatsInstances.this.JF[P1],implicitevidence$8:ProductFormatsInstances.this.JF[P2]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat2", "tail" : "(construct: (P1, P2) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat2", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat2[P1,P2,T<:Product](construct:(P1,P2)=>T)(implicitevidence$4:ProductFormatsInstances.this.JF[P1],implicitevidence$5:ProductFormatsInstances.this.JF[P2],implicitevidence$6:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1) ⇒ T, fieldName1: String)(arg0: JF[P1]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat[P1,T<:Product](construct:P1=>T,fieldName1:String)(implicitevidence$3:ProductFormatsInstances.this.JF[P1]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat1", "tail" : "(construct: (P1) ⇒ T)(arg0: JF[P1], arg1: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat1", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#jsonFormat1[P1,T<:Product](construct:P1=>T)(implicitevidence$1:ProductFormatsInstances.this.JF[P1],implicitevidence$2:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "viaSeq", "tail" : "(f: (Seq[T]) ⇒ I)(arg0: JsonFormat[T]): RootJsonFormat[I]", "member" : "spray.json.CollectionFormats.viaSeq", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#viaSeq[I<:Iterable[T],T](f:scala.collection.immutable.Seq[T]=>I)(implicitevidence$17:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[I]", "kind" : "def"}, {"label" : "setFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Set[T]]", "member" : "spray.json.CollectionFormats.setFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#setFormat[T](implicitevidence$16:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.Set[T]]", "kind" : "implicit def"}, {"label" : "linearSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[LinearSeq[T]]", "member" : "spray.json.CollectionFormats.linearSeqFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#linearSeqFormat[T](implicitevidence$15:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.LinearSeq[T]]", "kind" : "implicit def"}, {"label" : "indexedSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[IndexedSeq[T]]", "member" : "spray.json.CollectionFormats.indexedSeqFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#indexedSeqFormat[T](implicitevidence$14:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[IndexedSeq[T]]", "kind" : "implicit def"}, {"label" : "seqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Seq[T]]", "member" : "spray.json.CollectionFormats.seqFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#seqFormat[T](implicitevidence$13:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[Seq[T]]", "kind" : "implicit def"}, {"label" : "iterableFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Iterable[T]]", "member" : "spray.json.CollectionFormats.iterableFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#iterableFormat[T](implicitevidence$12:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[Iterable[T]]", "kind" : "implicit def"}, {"label" : "vectorFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Vector[T]]", "member" : "spray.json.CollectionFormats.vectorFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#vectorFormat[T](implicitevidence$11:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[Vector[T]]", "kind" : "implicit def"}, {"label" : "immSetFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Set[T]]", "member" : "spray.json.CollectionFormats.immSetFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#immSetFormat[T](implicitevidence$10:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.Set[T]]", "kind" : "implicit def"}, {"label" : "immLinearSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[LinearSeq[T]]", "member" : "spray.json.CollectionFormats.immLinearSeqFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#immLinearSeqFormat[T](implicitevidence$9:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.LinearSeq[T]]", "kind" : "implicit def"}, {"label" : "immIndexedSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[IndexedSeq[T]]", "member" : "spray.json.CollectionFormats.immIndexedSeqFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#immIndexedSeqFormat[T](implicitevidence$8:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.IndexedSeq[T]]", "kind" : "implicit def"}, {"label" : "immSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Seq[T]]", "member" : "spray.json.CollectionFormats.immSeqFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#immSeqFormat[T](implicitevidence$7:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.Seq[T]]", "kind" : "implicit def"}, {"label" : "immIterableFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Iterable[T]]", "member" : "spray.json.CollectionFormats.immIterableFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#immIterableFormat[T](implicitevidence$6:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.Iterable[T]]", "kind" : "implicit def"}, {"label" : "mapFormat", "tail" : "(arg0: JsonFormat[K], arg1: JsonFormat[V]): RootJsonFormat[Map[K, V]] { def write(m: Map[K,V]): spray.json.JsObject }", "member" : "spray.json.CollectionFormats.mapFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#mapFormat[K,V](implicitevidence$4:spray.json.JsonFormat[K],implicitevidence$5:spray.json.JsonFormat[V]):spray.json.RootJsonFormat[Map[K,V]]{defwrite(m:Map[K,V]):spray.json.JsObject}", "kind" : "implicit def"}, {"label" : "arrayFormat", "tail" : "(arg0: JsonFormat[T], arg1: ClassManifest[T]): RootJsonFormat[Array[T]] { def write(array: Array[T]): spray.json.JsArray }", "member" : "spray.json.CollectionFormats.arrayFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#arrayFormat[T](implicitevidence$2:spray.json.JsonFormat[T],implicitevidence$3:ClassManifest[T]):spray.json.RootJsonFormat[Array[T]]{defwrite(array:Array[T]):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "listFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[List[T]] { def write(list: List[T]): spray.json.JsArray }", "member" : "spray.json.CollectionFormats.listFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#listFormat[T](implicitevidence$1:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[List[T]]{defwrite(list:List[T]):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple7Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D], arg4: JF[E], arg5: JF[F], arg6: JF[G]): RootJsonFormat[(A, B, C, D, E, F, G)] { def write(t: (A, B, C, D, E, F, G)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple7Format", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#tuple7Format[A,B,C,D,E,F,G](implicitevidence$26:StandardFormats.this.JF[A],implicitevidence$27:StandardFormats.this.JF[B],implicitevidence$28:StandardFormats.this.JF[C],implicitevidence$29:StandardFormats.this.JF[D],implicitevidence$30:StandardFormats.this.JF[E],implicitevidence$31:StandardFormats.this.JF[F],implicitevidence$32:StandardFormats.this.JF[G]):spray.json.RootJsonFormat[(A,B,C,D,E,F,G)]{defwrite(t:(A,B,C,D,E,F,G)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple6Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D], arg4: JF[E], arg5: JF[F]): RootJsonFormat[(A, B, C, D, E, F)] { def write(t: (A, B, C, D, E, F)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple6Format", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#tuple6Format[A,B,C,D,E,F](implicitevidence$20:StandardFormats.this.JF[A],implicitevidence$21:StandardFormats.this.JF[B],implicitevidence$22:StandardFormats.this.JF[C],implicitevidence$23:StandardFormats.this.JF[D],implicitevidence$24:StandardFormats.this.JF[E],implicitevidence$25:StandardFormats.this.JF[F]):spray.json.RootJsonFormat[(A,B,C,D,E,F)]{defwrite(t:(A,B,C,D,E,F)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple5Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D], arg4: JF[E]): RootJsonFormat[(A, B, C, D, E)] { def write(t: (A, B, C, D, E)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple5Format", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#tuple5Format[A,B,C,D,E](implicitevidence$15:StandardFormats.this.JF[A],implicitevidence$16:StandardFormats.this.JF[B],implicitevidence$17:StandardFormats.this.JF[C],implicitevidence$18:StandardFormats.this.JF[D],implicitevidence$19:StandardFormats.this.JF[E]):spray.json.RootJsonFormat[(A,B,C,D,E)]{defwrite(t:(A,B,C,D,E)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple4Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D]): RootJsonFormat[(A, B, C, D)] { def write(t: (A, B, C, D)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple4Format", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#tuple4Format[A,B,C,D](implicitevidence$11:StandardFormats.this.JF[A],implicitevidence$12:StandardFormats.this.JF[B],implicitevidence$13:StandardFormats.this.JF[C],implicitevidence$14:StandardFormats.this.JF[D]):spray.json.RootJsonFormat[(A,B,C,D)]{defwrite(t:(A,B,C,D)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple3Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C]): RootJsonFormat[(A, B, C)] { def write(t: (A, B, C)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple3Format", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#tuple3Format[A,B,C](implicitevidence$8:StandardFormats.this.JF[A],implicitevidence$9:StandardFormats.this.JF[B],implicitevidence$10:StandardFormats.this.JF[C]):spray.json.RootJsonFormat[(A,B,C)]{defwrite(t:(A,B,C)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple2Format", "tail" : "(arg0: JF[A], arg1: JF[B]): RootJsonFormat[(A, B)] { def write(t: (A, B)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple2Format", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#tuple2Format[A,B](implicitevidence$6:StandardFormats.this.JF[A],implicitevidence$7:StandardFormats.this.JF[B]):spray.json.RootJsonFormat[(A,B)]{defwrite(t:(A,B)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple1Format", "tail" : "(arg0: JF[A]): JF[(A)]", "member" : "spray.json.StandardFormats.tuple1Format", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#tuple1Format[A](implicitevidence$5:StandardFormats.this.JF[A]):StandardFormats.this.JF[(A,)]", "kind" : "implicit def"}, {"label" : "eitherFormat", "tail" : "(arg0: JF[A], arg1: JF[B]): JF[Either[A, B]]", "member" : "spray.json.StandardFormats.eitherFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#eitherFormat[A,B](implicitevidence$3:StandardFormats.this.JF[A],implicitevidence$4:StandardFormats.this.JF[B]):StandardFormats.this.JF[Either[A,B]]", "kind" : "implicit def"}, {"label" : "optionFormat", "tail" : "(arg0: JF[T]): JF[Option[T]]", "member" : "spray.json.StandardFormats.optionFormat", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#optionFormat[T](implicitevidence$1:StandardFormats.this.JF[T]):StandardFormats.this.JF[Option[T]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/CityProtocol$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.regularoddity.coveo.Configuration", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/Configuration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/Configuration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/Configuration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/Configuration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/Configuration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/Configuration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/Configuration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/Configuration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/Configuration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/Configuration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/Configuration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/Configuration.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/regularoddity\/coveo\/Configuration.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/regularoddity\/coveo\/Configuration.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/regularoddity\/coveo\/Configuration.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/regularoddity\/coveo\/Configuration.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/Configuration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/Configuration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/Configuration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "configuration", "tail" : "(): Config", "member" : "com.regularoddity.coveo.Configuration.configuration", "link" : "com\/regularoddity\/coveo\/Configuration.html#configuration:com.typesafe.config.Config", "kind" : "abstract def"}], "shortDescription" : "How to configure the main service for this application.", "trait" : "com\/regularoddity\/coveo\/Configuration.html", "kind" : "trait"}, {"name" : "com.regularoddity.coveo.ConfigurationHandle", "shortDescription" : "Fetches the configuration file on the filesystem or otherwise, it falls back to getting one from a resource.", "members_class" : [{"label" : "configuration", "tail" : "(): Config", "member" : "com.regularoddity.coveo.ConfigurationHandle.configuration", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#configuration:com.typesafe.config.Config", "kind" : "def"}, {"label" : "configFile", "tail" : ": File", "member" : "com.regularoddity.coveo.ConfigurationHandle.configFile", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#configFile:java.io.File", "kind" : "val"}, {"label" : "configLocations", "tail" : ": Seq[String]", "member" : "com.regularoddity.coveo.ConfigurationHandle.configLocations", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#configLocations:Seq[String]", "kind" : "val"}, {"label" : "pathsToFile", "tail" : "(paths: Seq[String]): File", "member" : "com.regularoddity.coveo.ConfigurationHandle.pathsToFile", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#pathsToFile(paths:Seq[String]):java.io.File", "kind" : "def"}, {"member" : "com.regularoddity.coveo.ConfigurationHandle#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/ConfigurationHandle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/regularoddity\/coveo\/ConfigurationHandle.html", "kind" : "class"}, {"name" : "com.regularoddity.coveo.ConfigurationModule", "shortDescription" : "Sets up the bindings for the dependency injections.", "members_class" : [{"label" : "configure", "tail" : "(): Unit", "member" : "com.regularoddity.coveo.ConfigurationModule.configure", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#configure():Unit", "kind" : "def"}, {"member" : "com.regularoddity.coveo.ConfigurationModule#<init>", "error" : "unsupported entity"}, {"label" : "bindListener", "tail" : "(arg0: Matcher[_ >: Binding[_]], arg1: <repeated...>[ProvisionListener]): Unit", "member" : "com.google.inject.AbstractModule.bindListener", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#bindListener(x$1:com.google.inject.matcher.Matcher[_>:com.google.inject.Binding[_]],x$2:com.google.inject.spi.ProvisionListener*):Unit", "kind" : "def"}, {"label" : "bindListener", "tail" : "(arg0: Matcher[_ >: TypeLiteral[_]], arg1: TypeListener): Unit", "member" : "com.google.inject.AbstractModule.bindListener", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#bindListener(x$1:com.google.inject.matcher.Matcher[_>:com.google.inject.TypeLiteral[_]],x$2:com.google.inject.spi.TypeListener):Unit", "kind" : "def"}, {"label" : "getMembersInjector", "tail" : "(arg0: TypeLiteral[T]): MembersInjector[T]", "member" : "com.google.inject.AbstractModule.getMembersInjector", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#getMembersInjector[T](x$1:com.google.inject.TypeLiteral[T]):com.google.inject.MembersInjector[T]", "kind" : "def"}, {"label" : "getMembersInjector", "tail" : "(arg0: Class[T]): MembersInjector[T]", "member" : "com.google.inject.AbstractModule.getMembersInjector", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#getMembersInjector[T](x$1:Class[T]):com.google.inject.MembersInjector[T]", "kind" : "def"}, {"label" : "currentStage", "tail" : "(): Stage", "member" : "com.google.inject.AbstractModule.currentStage", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#currentStage():com.google.inject.Stage", "kind" : "def"}, {"label" : "convertToTypes", "tail" : "(arg0: Matcher[_ >: TypeLiteral[_]], arg1: TypeConverter): Unit", "member" : "com.google.inject.AbstractModule.convertToTypes", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#convertToTypes(x$1:com.google.inject.matcher.Matcher[_>:com.google.inject.TypeLiteral[_]],x$2:com.google.inject.spi.TypeConverter):Unit", "kind" : "def"}, {"label" : "getProvider", "tail" : "(arg0: Class[T]): Provider[T]", "member" : "com.google.inject.AbstractModule.getProvider", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#getProvider[T](x$1:Class[T]):com.google.inject.Provider[T]", "kind" : "def"}, {"label" : "getProvider", "tail" : "(arg0: Key[T]): Provider[T]", "member" : "com.google.inject.AbstractModule.getProvider", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#getProvider[T](x$1:com.google.inject.Key[T]):com.google.inject.Provider[T]", "kind" : "def"}, {"label" : "requireBinding", "tail" : "(arg0: Class[_]): Unit", "member" : "com.google.inject.AbstractModule.requireBinding", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#requireBinding(x$1:Class[_]):Unit", "kind" : "def"}, {"label" : "requireBinding", "tail" : "(arg0: Key[_]): Unit", "member" : "com.google.inject.AbstractModule.requireBinding", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#requireBinding(x$1:com.google.inject.Key[_]):Unit", "kind" : "def"}, {"label" : "bindInterceptor", "tail" : "(arg0: Matcher[_ >: Class[_]], arg1: Matcher[_ >: Method], arg2: <repeated...>[MethodInterceptor]): Unit", "member" : "com.google.inject.AbstractModule.bindInterceptor", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#bindInterceptor(x$1:com.google.inject.matcher.Matcher[_>:Class[_]],x$2:com.google.inject.matcher.Matcher[_>:java.lang.reflect.Method],x$3:org.aopalliance.intercept.MethodInterceptor*):Unit", "kind" : "def"}, {"label" : "requestStaticInjection", "tail" : "(arg0: <repeated...>[Class[_]]): Unit", "member" : "com.google.inject.AbstractModule.requestStaticInjection", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#requestStaticInjection(x$1:Class[_]*):Unit", "kind" : "def"}, {"label" : "requestInjection", "tail" : "(arg0: Any): Unit", "member" : "com.google.inject.AbstractModule.requestInjection", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#requestInjection(x$1:Any):Unit", "kind" : "def"}, {"label" : "addError", "tail" : "(arg0: Message): Unit", "member" : "com.google.inject.AbstractModule.addError", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#addError(x$1:com.google.inject.spi.Message):Unit", "kind" : "def"}, {"label" : "addError", "tail" : "(arg0: Throwable): Unit", "member" : "com.google.inject.AbstractModule.addError", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#addError(x$1:Throwable):Unit", "kind" : "def"}, {"label" : "addError", "tail" : "(arg0: String, arg1: <repeated...>[AnyRef]): Unit", "member" : "com.google.inject.AbstractModule.addError", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#addError(x$1:String,x$2:Object*):Unit", "kind" : "def"}, {"label" : "install", "tail" : "(arg0: Module): Unit", "member" : "com.google.inject.AbstractModule.install", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#install(x$1:com.google.inject.Module):Unit", "kind" : "def"}, {"label" : "bindConstant", "tail" : "(): AnnotatedConstantBindingBuilder", "member" : "com.google.inject.AbstractModule.bindConstant", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#bindConstant():com.google.inject.binder.AnnotatedConstantBindingBuilder", "kind" : "def"}, {"label" : "bind", "tail" : "(arg0: Class[T]): AnnotatedBindingBuilder[T]", "member" : "com.google.inject.AbstractModule.bind", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#bind[T](x$1:Class[T]):com.google.inject.binder.AnnotatedBindingBuilder[T]", "kind" : "def"}, {"label" : "bind", "tail" : "(arg0: TypeLiteral[T]): AnnotatedBindingBuilder[T]", "member" : "com.google.inject.AbstractModule.bind", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#bind[T](x$1:com.google.inject.TypeLiteral[T]):com.google.inject.binder.AnnotatedBindingBuilder[T]", "kind" : "def"}, {"label" : "bind", "tail" : "(arg0: Key[T]): LinkedBindingBuilder[T]", "member" : "com.google.inject.AbstractModule.bind", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#bind[T](x$1:com.google.inject.Key[T]):com.google.inject.binder.LinkedBindingBuilder[T]", "kind" : "def"}, {"label" : "bindScope", "tail" : "(arg0: Class[_ <: Annotation], arg1: Scope): Unit", "member" : "com.google.inject.AbstractModule.bindScope", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#bindScope(x$1:Class[_<:java.lang.annotation.Annotation],x$2:com.google.inject.Scope):Unit", "kind" : "def"}, {"label" : "binder", "tail" : "(): Binder", "member" : "com.google.inject.AbstractModule.binder", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#binder():com.google.inject.Binder", "kind" : "def"}, {"label" : "configure", "tail" : "(arg0: Binder): Unit", "member" : "com.google.inject.AbstractModule.configure", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#configure(x$1:com.google.inject.Binder):Unit", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/ConfigurationModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/regularoddity\/coveo\/ConfigurationModule.html", "kind" : "class"}, {"name" : "com.regularoddity.coveo.ConfMap", "shortDescription" : "", "members_class" : [{"label" : "MappedValues", "tail" : "", "member" : "scala.collection.MapLike.MappedValues", "link" : "com\/regularoddity\/coveo\/ConfMap.html#MappedValues[W<:<?>]extendsAbstractMap[K,W]withDefaultMap[K,W]", "kind" : "class"}, {"label" : "FilteredKeys", "tail" : "", "member" : "scala.collection.MapLike.FilteredKeys", "link" : "com\/regularoddity\/coveo\/ConfMap.html#FilteredKeysextendsAbstractMap[K,V]withDefaultMap[K,V]", "kind" : "class"}, {"label" : "DefaultValuesIterable", "tail" : "", "member" : "scala.collection.MapLike.DefaultValuesIterable", "link" : "com\/regularoddity\/coveo\/ConfMap.html#DefaultValuesIterableextendsAbstractIterable[V]withIterable[V]withSerializable", "kind" : "class"}, {"label" : "DefaultKeySet", "tail" : "", "member" : "scala.collection.MapLike.DefaultKeySet", "link" : "com\/regularoddity\/coveo\/ConfMap.html#DefaultKeySetextendsAbstractSet[K]withSet[K]withSerializable", "kind" : "class"}, {"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "com\/regularoddity\/coveo\/ConfMap.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "replace", "tail" : "(k: String, v: Config): Option[Config]", "member" : "com.regularoddity.coveo.ConfMap.replace", "link" : "com\/regularoddity\/coveo\/ConfMap.html#replace(k:String,v:com.typesafe.config.Config):Option[com.typesafe.config.Config]", "kind" : "def"}, {"label" : "replace", "tail" : "(k: String, oldvalue: Config, newvalue: Config): Boolean", "member" : "com.regularoddity.coveo.ConfMap.replace", "link" : "com\/regularoddity\/coveo\/ConfMap.html#replace(k:String,oldvalue:com.typesafe.config.Config,newvalue:com.typesafe.config.Config):Boolean", "kind" : "def"}, {"label" : "remove", "tail" : "(k: String, v: Config): Boolean", "member" : "com.regularoddity.coveo.ConfMap.remove", "link" : "com\/regularoddity\/coveo\/ConfMap.html#remove(k:String,v:com.typesafe.config.Config):Boolean", "kind" : "def"}, {"label" : "putIfAbsent", "tail" : "(k: String, v: Config): Option[Config]", "member" : "com.regularoddity.coveo.ConfMap.putIfAbsent", "link" : "com\/regularoddity\/coveo\/ConfMap.html#putIfAbsent(k:String,v:com.typesafe.config.Config):Option[com.typesafe.config.Config]", "kind" : "def"}, {"member" : "com.regularoddity.coveo.ConfMap#<init>", "error" : "unsupported entity"}, {"label" : "getOrElseUpdate", "tail" : "(key: String, op: ⇒ Config): Config", "member" : "scala.collection.concurrent.Map.getOrElseUpdate", "link" : "com\/regularoddity\/coveo\/ConfMap.html#getOrElseUpdate(key:A,op:=>B):B", "kind" : "def"}, {"label" : "createNewEntry", "tail" : "(key: String, value: B1): Entry", "member" : "scala.collection.mutable.HashMap.createNewEntry", "link" : "com\/regularoddity\/coveo\/ConfMap.html#createNewEntry[B1](key:A,value:B1):HashMap.this.Entry", "kind" : "def"}, {"label" : "useSizeMap", "tail" : "(t: Boolean): Unit", "member" : "scala.collection.mutable.HashMap.useSizeMap", "link" : "com\/regularoddity\/coveo\/ConfMap.html#useSizeMap(t:Boolean):Unit", "kind" : "def"}, {"label" : "valuesIterator", "tail" : "(): Iterator[Config]", "member" : "scala.collection.mutable.HashMap.valuesIterator", "link" : "com\/regularoddity\/coveo\/ConfMap.html#valuesIterator:Iterator[B]", "kind" : "def"}, {"label" : "keysIterator", "tail" : "(): Iterator[String]", "member" : "scala.collection.mutable.HashMap.keysIterator", "link" : "com\/regularoddity\/coveo\/ConfMap.html#keysIterator:Iterator[A]", "kind" : "def"}, {"label" : "values", "tail" : "(): Iterable[Config]", "member" : "scala.collection.mutable.HashMap.values", "link" : "com\/regularoddity\/coveo\/ConfMap.html#values:Iterable[B]", "kind" : "def"}, {"label" : "keySet", "tail" : "(): Set[String]", "member" : "scala.collection.mutable.HashMap.keySet", "link" : "com\/regularoddity\/coveo\/ConfMap.html#keySet:scala.collection.Set[A]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: ((String, Config)) ⇒ U): Unit", "member" : "scala.collection.mutable.HashMap.foreach", "link" : "com\/regularoddity\/coveo\/ConfMap.html#foreach[U](f:((A,B))=>U):Unit", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[(String, Config)]", "member" : "scala.collection.mutable.HashMap.iterator", "link" : "com\/regularoddity\/coveo\/ConfMap.html#iterator:Iterator[(A,B)]", "kind" : "def"}, {"label" : "-=", "tail" : "(key: String): ConfMap.this.type", "member" : "scala.collection.mutable.HashMap.-=", "link" : "com\/regularoddity\/coveo\/ConfMap.html#-=(key:A):HashMap.this.type", "kind" : "def"}, {"label" : "+=", "tail" : "(kv: (String, Config)): ConfMap.this.type", "member" : "scala.collection.mutable.HashMap.+=", "link" : "com\/regularoddity\/coveo\/ConfMap.html#+=(kv:(A,B)):HashMap.this.type", "kind" : "def"}, {"label" : "remove", "tail" : "(key: String): Option[Config]", "member" : "scala.collection.mutable.HashMap.remove", "link" : "com\/regularoddity\/coveo\/ConfMap.html#remove(key:A):Option[B]", "kind" : "def"}, {"label" : "update", "tail" : "(key: String, value: Config): Unit", "member" : "scala.collection.mutable.HashMap.update", "link" : "com\/regularoddity\/coveo\/ConfMap.html#update(key:A,value:B):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(key: String, value: Config): Option[Config]", "member" : "scala.collection.mutable.HashMap.put", "link" : "com\/regularoddity\/coveo\/ConfMap.html#put(key:A,value:B):Option[B]", "kind" : "def"}, {"label" : "get", "tail" : "(key: String): Option[Config]", "member" : "scala.collection.mutable.HashMap.get", "link" : "com\/regularoddity\/coveo\/ConfMap.html#get(key:A):Option[B]", "kind" : "def"}, {"label" : "apply", "tail" : "(key: String): Config", "member" : "scala.collection.mutable.HashMap.apply", "link" : "com\/regularoddity\/coveo\/ConfMap.html#apply(key:A):B", "kind" : "def"}, {"label" : "contains", "tail" : "(key: String): Boolean", "member" : "scala.collection.mutable.HashMap.contains", "link" : "com\/regularoddity\/coveo\/ConfMap.html#contains(key:A):Boolean", "kind" : "def"}, {"label" : "par", "tail" : "(): ParHashMap[String, Config]", "member" : "scala.collection.mutable.HashMap.par", "link" : "com\/regularoddity\/coveo\/ConfMap.html#par:scala.collection.parallel.mutable.ParHashMap[A,B]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.mutable.HashMap.size", "link" : "com\/regularoddity\/coveo\/ConfMap.html#size:Int", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "scala.collection.mutable.HashMap.clear", "link" : "com\/regularoddity\/coveo\/ConfMap.html#clear():Unit", "kind" : "def"}, {"label" : "empty", "tail" : "(): HashMap[String, Config]", "member" : "scala.collection.mutable.HashMap.empty", "link" : "com\/regularoddity\/coveo\/ConfMap.html#empty:scala.collection.mutable.HashMap[A,B]", "kind" : "def"}, {"label" : "Entry", "tail" : "", "member" : "scala.collection.mutable.HashMap.Entry", "link" : "com\/regularoddity\/coveo\/ConfMap.html#Entry=scala.collection.mutable.DefaultEntry[A,B]", "kind" : "type"}, {"label" : "parCombiner", "tail" : "(): Combiner[(String, Config), ParHashMap[String, Config]]", "member" : "scala.collection.CustomParallelizable.parCombiner", "link" : "com\/regularoddity\/coveo\/ConfMap.html#parCombiner:scala.collection.parallel.Combiner[A,ParRepr]", "kind" : "def"}, {"label" : "initWithContents", "tail" : "(c: Contents[String, DefaultEntry[String, Config]]): Unit", "member" : "scala.collection.mutable.HashTable.initWithContents", "link" : "com\/regularoddity\/coveo\/ConfMap.html#initWithContents(c:scala.collection.mutable.HashTable.Contents[A,Entry]):Unit", "kind" : "def"}, {"label" : "index", "tail" : "(hcode: Int): Int", "member" : "scala.collection.mutable.HashTable.index", "link" : "com\/regularoddity\/coveo\/ConfMap.html#index(hcode:Int):Int", "kind" : "final def"}, {"label" : "elemEquals", "tail" : "(key1: String, key2: String): Boolean", "member" : "scala.collection.mutable.HashTable.elemEquals", "link" : "com\/regularoddity\/coveo\/ConfMap.html#elemEquals(key1:A,key2:A):Boolean", "kind" : "def"}, {"label" : "alwaysInitSizeMap", "tail" : "(): Boolean", "member" : "scala.collection.mutable.HashTable.alwaysInitSizeMap", "link" : "com\/regularoddity\/coveo\/ConfMap.html#alwaysInitSizeMap:Boolean", "kind" : "def"}, {"label" : "isSizeMapDefined", "tail" : "(): Boolean", "member" : "scala.collection.mutable.HashTable.isSizeMapDefined", "link" : "com\/regularoddity\/coveo\/ConfMap.html#isSizeMapDefined:Boolean", "kind" : "def"}, {"label" : "sizeMapDisable", "tail" : "(): Unit", "member" : "scala.collection.mutable.HashTable.sizeMapDisable", "link" : "com\/regularoddity\/coveo\/ConfMap.html#sizeMapDisable():Unit", "kind" : "def"}, {"label" : "sizeMapInitAndRebuild", "tail" : "(): Unit", "member" : "scala.collection.mutable.HashTable.sizeMapInitAndRebuild", "link" : "com\/regularoddity\/coveo\/ConfMap.html#sizeMapInitAndRebuild():Unit", "kind" : "def"}, {"label" : "sizeMapInit", "tail" : "(tableLength: Int): Unit", "member" : "scala.collection.mutable.HashTable.sizeMapInit", "link" : "com\/regularoddity\/coveo\/ConfMap.html#sizeMapInit(tableLength:Int):Unit", "kind" : "def"}, {"label" : "calcSizeMapSize", "tail" : "(tableLength: Int): Int", "member" : "scala.collection.mutable.HashTable.calcSizeMapSize", "link" : "com\/regularoddity\/coveo\/ConfMap.html#calcSizeMapSize(tableLength:Int):Int", "kind" : "def"}, {"label" : "nnSizeMapReset", "tail" : "(tableLength: Int): Unit", "member" : "scala.collection.mutable.HashTable.nnSizeMapReset", "link" : "com\/regularoddity\/coveo\/ConfMap.html#nnSizeMapReset(tableLength:Int):Unit", "kind" : "def"}, {"label" : "nnSizeMapRemove", "tail" : "(h: Int): Unit", "member" : "scala.collection.mutable.HashTable.nnSizeMapRemove", "link" : "com\/regularoddity\/coveo\/ConfMap.html#nnSizeMapRemove(h:Int):Unit", "kind" : "def"}, {"label" : "nnSizeMapAdd", "tail" : "(h: Int): Unit", "member" : "scala.collection.mutable.HashTable.nnSizeMapAdd", "link" : "com\/regularoddity\/coveo\/ConfMap.html#nnSizeMapAdd(h:Int):Unit", "kind" : "def"}, {"label" : "clearTable", "tail" : "(): Unit", "member" : "scala.collection.mutable.HashTable.clearTable", "link" : "com\/regularoddity\/coveo\/ConfMap.html#clearTable():Unit", "kind" : "def"}, {"label" : "foreachEntry", "tail" : "(f: (DefaultEntry[String, Config]) ⇒ U): Unit", "member" : "scala.collection.mutable.HashTable.foreachEntry", "link" : "com\/regularoddity\/coveo\/ConfMap.html#foreachEntry[U](f:Entry=>U):Unit", "kind" : "def"}, {"label" : "entriesIterator", "tail" : "(): Iterator[DefaultEntry[String, Config]]", "member" : "scala.collection.mutable.HashTable.entriesIterator", "link" : "com\/regularoddity\/coveo\/ConfMap.html#entriesIterator:Iterator[Entry]", "kind" : "def"}, {"label" : "removeEntry", "tail" : "(key: String): DefaultEntry[String, Config]", "member" : "scala.collection.mutable.HashTable.removeEntry", "link" : "com\/regularoddity\/coveo\/ConfMap.html#removeEntry(key:A):Entry", "kind" : "def"}, {"label" : "findOrAddEntry", "tail" : "(key: String, value: B): DefaultEntry[String, Config]", "member" : "scala.collection.mutable.HashTable.findOrAddEntry", "link" : "com\/regularoddity\/coveo\/ConfMap.html#findOrAddEntry[B](key:A,value:B):Entry", "kind" : "def"}, {"label" : "addEntry", "tail" : "(e: DefaultEntry[String, Config]): Unit", "member" : "scala.collection.mutable.HashTable.addEntry", "link" : "com\/regularoddity\/coveo\/ConfMap.html#addEntry(e:Entry):Unit", "kind" : "def"}, {"label" : "findEntry", "tail" : "(key: String): DefaultEntry[String, Config]", "member" : "scala.collection.mutable.HashTable.findEntry", "link" : "com\/regularoddity\/coveo\/ConfMap.html#findEntry(key:A):Entry", "kind" : "def"}, {"label" : "initialSize", "tail" : "(): Int", "member" : "scala.collection.mutable.HashTable.initialSize", "link" : "com\/regularoddity\/coveo\/ConfMap.html#initialSize:Int", "kind" : "def"}, {"label" : "tableSizeSeed", "tail" : "(): Int", "member" : "scala.collection.mutable.HashTable.tableSizeSeed", "link" : "com\/regularoddity\/coveo\/ConfMap.html#tableSizeSeed:Int", "kind" : "def"}, {"label" : "seedvalue", "tail" : ": Int", "member" : "scala.collection.mutable.HashTable.seedvalue", "link" : "com\/regularoddity\/coveo\/ConfMap.html#seedvalue:Int", "kind" : "val"}, {"label" : "sizemap", "tail" : ": Array[Int]", "member" : "scala.collection.mutable.HashTable.sizemap", "link" : "com\/regularoddity\/coveo\/ConfMap.html#sizemap:Array[Int]", "kind" : "val"}, {"label" : "threshold", "tail" : ": Int", "member" : "scala.collection.mutable.HashTable.threshold", "link" : "com\/regularoddity\/coveo\/ConfMap.html#threshold:Int", "kind" : "val"}, {"label" : "tableSize", "tail" : ": Int", "member" : "scala.collection.mutable.HashTable.tableSize", "link" : "com\/regularoddity\/coveo\/ConfMap.html#tableSize:Int", "kind" : "val"}, {"label" : "table", "tail" : ": Array[HashEntry[String, DefaultEntry[String, Config]]]", "member" : "scala.collection.mutable.HashTable.table", "link" : "com\/regularoddity\/coveo\/ConfMap.html#table:Array[scala.collection.mutable.HashEntry[A,Entry]]", "kind" : "val"}, {"label" : "_loadFactor", "tail" : ": Int", "member" : "scala.collection.mutable.HashTable._loadFactor", "link" : "com\/regularoddity\/coveo\/ConfMap.html#_loadFactor:Int", "kind" : "val"}, {"label" : "improve", "tail" : "(hcode: Int, seed: Int): Int", "member" : "scala.collection.mutable.HashTable.HashUtils.improve", "link" : "com\/regularoddity\/coveo\/ConfMap.html#improve(hcode:Int,seed:Int):Int", "kind" : "final def"}, {"label" : "elemHashCode", "tail" : "(key: String): Int", "member" : "scala.collection.mutable.HashTable.HashUtils.elemHashCode", "link" : "com\/regularoddity\/coveo\/ConfMap.html#elemHashCode(key:KeyType):Int", "kind" : "def"}, {"label" : "sizeMapBucketSize", "tail" : "(): Int", "member" : "scala.collection.mutable.HashTable.HashUtils.sizeMapBucketSize", "link" : "com\/regularoddity\/coveo\/ConfMap.html#sizeMapBucketSize:Int", "kind" : "final def"}, {"label" : "sizeMapBucketBitSize", "tail" : "(): Int", "member" : "scala.collection.mutable.HashTable.HashUtils.sizeMapBucketBitSize", "link" : "com\/regularoddity\/coveo\/ConfMap.html#sizeMapBucketBitSize:Int", "kind" : "final def"}, {"label" : "withDefaultValue", "tail" : "(d: Config): Map[String, Config]", "member" : "scala.collection.mutable.Map.withDefaultValue", "link" : "com\/regularoddity\/coveo\/ConfMap.html#withDefaultValue(d:V):scala.collection.mutable.Map[K,V]", "kind" : "def"}, {"label" : "withDefault", "tail" : "(d: (String) ⇒ Config): Map[String, Config]", "member" : "scala.collection.mutable.Map.withDefault", "link" : "com\/regularoddity\/coveo\/ConfMap.html#withDefault(d:K=>V):scala.collection.mutable.Map[K,V]", "kind" : "def"}, {"label" : "seq", "tail" : "(): Map[String, Config]", "member" : "scala.collection.mutable.Map.seq", "link" : "com\/regularoddity\/coveo\/ConfMap.html#seq:scala.collection.mutable.Map[K,V]", "kind" : "def"}, {"label" : "--", "tail" : "(xs: GenTraversableOnce[String]): HashMap[String, Config]", "member" : "scala.collection.mutable.MapLike.--", "link" : "com\/regularoddity\/coveo\/ConfMap.html#--(xs:scala.collection.GenTraversableOnce[K]):This", "kind" : "def"}, {"label" : "-", "tail" : "(elem1: String, elem2: String, elems: String*): HashMap[String, Config]", "member" : "scala.collection.mutable.MapLike.-", "link" : "com\/regularoddity\/coveo\/ConfMap.html#-(elem1:K,elem2:K,elems:K*):This", "kind" : "def"}, {"label" : "result", "tail" : "(): HashMap[String, Config]", "member" : "scala.collection.mutable.MapLike.result", "link" : "com\/regularoddity\/coveo\/ConfMap.html#result():This", "kind" : "def"}, {"label" : "clone", "tail" : "(): HashMap[String, Config]", "member" : "scala.collection.mutable.MapLike.clone", "link" : "com\/regularoddity\/coveo\/ConfMap.html#clone():This", "kind" : "def"}, {"label" : "retain", "tail" : "(p: (String, Config) ⇒ Boolean): ConfMap.this.type", "member" : "scala.collection.mutable.MapLike.retain", "link" : "com\/regularoddity\/coveo\/ConfMap.html#retain(p:(K,V)=>Boolean):MapLike.this.type", "kind" : "def"}, {"label" : "transform", "tail" : "(f: (String, Config) ⇒ Config): ConfMap.this.type", "member" : "scala.collection.mutable.MapLike.transform", "link" : "com\/regularoddity\/coveo\/ConfMap.html#transform(f:(K,V)=>V):MapLike.this.type", "kind" : "def"}, {"label" : "-", "tail" : "(key: String): HashMap[String, Config]", "member" : "scala.collection.mutable.MapLike.-", "link" : "com\/regularoddity\/coveo\/ConfMap.html#-(key:K):This", "kind" : "def"}, {"label" : "++", "tail" : "(xs: GenTraversableOnce[(String, V1)]): Map[String, V1]", "member" : "scala.collection.mutable.MapLike.++", "link" : "com\/regularoddity\/coveo\/ConfMap.html#++[V1>:V](xs:scala.collection.GenTraversableOnce[(K,V1)]):scala.collection.mutable.Map[K,V1]", "kind" : "def"}, {"label" : "+", "tail" : "(elem1: (String, V1), elem2: (String, V1), elems: (String, V1)*): Map[String, V1]", "member" : "scala.collection.mutable.MapLike.+", "link" : "com\/regularoddity\/coveo\/ConfMap.html#+[V1>:V](elem1:(K,V1),elem2:(K,V1),elems:(K,V1)*):scala.collection.mutable.Map[K,V1]", "kind" : "def"}, {"label" : "+", "tail" : "(kv: (String, V1)): Map[String, V1]", "member" : "scala.collection.mutable.MapLike.+", "link" : "com\/regularoddity\/coveo\/ConfMap.html#+[V1>:V](kv:(K,V1)):scala.collection.mutable.Map[K,V1]", "kind" : "def"}, {"label" : "updated", "tail" : "(key: String, value: V1): Map[String, V1]", "member" : "scala.collection.mutable.MapLike.updated", "link" : "com\/regularoddity\/coveo\/ConfMap.html#updated[V1>:V](key:K,value:V1):scala.collection.mutable.Map[K,V1]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[(String, Config)]", "member" : "scala.collection.mutable.MapLike.toSeq", "link" : "com\/regularoddity\/coveo\/ConfMap.html#toSeq:Seq[(K,V)]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[(String, Config), HashMap[String, Config]]", "member" : "scala.collection.mutable.MapLike.newBuilder", "link" : "com\/regularoddity\/coveo\/ConfMap.html#newBuilder:scala.collection.mutable.Builder[(K,V),This]", "kind" : "def"}, {"label" : "--=", "tail" : "(xs: TraversableOnce[String]): ConfMap.this.type", "member" : "scala.collection.generic.Shrinkable.--=", "link" : "com\/regularoddity\/coveo\/ConfMap.html#--=(xs:scala.collection.TraversableOnce[A]):Shrinkable.this.type", "kind" : "def"}, {"label" : "-=", "tail" : "(elem1: String, elem2: String, elems: String*): ConfMap.this.type", "member" : "scala.collection.generic.Shrinkable.-=", "link" : "com\/regularoddity\/coveo\/ConfMap.html#-=(elem1:A,elem2:A,elems:A*):Shrinkable.this.type", "kind" : "def"}, {"label" : "mapResult", "tail" : "(f: (HashMap[String, Config]) ⇒ NewTo): Builder[(String, Config), NewTo]", "member" : "scala.collection.mutable.Builder.mapResult", "link" : "com\/regularoddity\/coveo\/ConfMap.html#mapResult[NewTo](f:To=>NewTo):scala.collection.mutable.Builder[Elem,NewTo]", "kind" : "def"}, {"label" : "sizeHintBounded", "tail" : "(size: Int, boundingColl: TraversableLike[_, _]): Unit", "member" : "scala.collection.mutable.Builder.sizeHintBounded", "link" : "com\/regularoddity\/coveo\/ConfMap.html#sizeHintBounded(size:Int,boundingColl:scala.collection.TraversableLike[_,_]):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(coll: TraversableLike[_, _], delta: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "com\/regularoddity\/coveo\/ConfMap.html#sizeHint(coll:scala.collection.TraversableLike[_,_],delta:Int):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(coll: TraversableLike[_, _]): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "com\/regularoddity\/coveo\/ConfMap.html#sizeHint(coll:scala.collection.TraversableLike[_,_]):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(size: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "com\/regularoddity\/coveo\/ConfMap.html#sizeHint(size:Int):Unit", "kind" : "def"}, {"label" : "++=", "tail" : "(xs: TraversableOnce[(String, Config)]): ConfMap.this.type", "member" : "scala.collection.generic.Growable.++=", "link" : "com\/regularoddity\/coveo\/ConfMap.html#++=(xs:scala.collection.TraversableOnce[A]):Growable.this.type", "kind" : "def"}, {"label" : "+=", "tail" : "(elem1: (String, Config), elem2: (String, Config), elems: (String, Config)*): ConfMap.this.type", "member" : "scala.collection.generic.Growable.+=", "link" : "com\/regularoddity\/coveo\/ConfMap.html#+=(elem1:A,elem2:A,elems:A*):Growable.this.type", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Iterable]", "member" : "scala.collection.mutable.Iterable.companion", "link" : "com\/regularoddity\/coveo\/ConfMap.html#companion:scala.collection.generic.GenericCompanion[scala.collection.mutable.Iterable]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.MapLike.toString", "link" : "com\/regularoddity\/coveo\/ConfMap.html#toString():String", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.MapLike.stringPrefix", "link" : "com\/regularoddity\/coveo\/ConfMap.html#stringPrefix:String", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.MapLike.addString", "link" : "com\/regularoddity\/coveo\/ConfMap.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[E]", "member" : "scala.collection.MapLike.toBuffer", "link" : "com\/regularoddity\/coveo\/ConfMap.html#toBuffer[E>:(K,V)]:scala.collection.mutable.Buffer[E]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: ((String, Config)) ⇒ Boolean): HashMap[String, Config]", "member" : "scala.collection.MapLike.filterNot", "link" : "com\/regularoddity\/coveo\/ConfMap.html#filterNot(p:((K,V))=>Boolean):This", "kind" : "def"}, {"label" : "mapValues", "tail" : "(f: (Config) ⇒ W): Map[String, W]", "member" : "scala.collection.MapLike.mapValues", "link" : "com\/regularoddity\/coveo\/ConfMap.html#mapValues[W](f:V=>W):scala.collection.Map[K,W]", "kind" : "def"}, {"label" : "filterKeys", "tail" : "(p: (String) ⇒ Boolean): Map[String, Config]", "member" : "scala.collection.MapLike.filterKeys", "link" : "com\/regularoddity\/coveo\/ConfMap.html#filterKeys(p:K=>Boolean):scala.collection.Map[K,V]", "kind" : "def"}, {"label" : "default", "tail" : "(key: String): Config", "member" : "scala.collection.MapLike.default", "link" : "com\/regularoddity\/coveo\/ConfMap.html#default(key:K):V", "kind" : "def"}, {"label" : "keys", "tail" : "(): Iterable[String]", "member" : "scala.collection.MapLike.keys", "link" : "com\/regularoddity\/coveo\/ConfMap.html#keys:Iterable[K]", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: K1, default: (K1) ⇒ V1): V1", "member" : "scala.collection.MapLike.applyOrElse", "link" : "com\/regularoddity\/coveo\/ConfMap.html#applyOrElse[K1<:K,V1>:V](x:K1,default:K1=>V1):V1", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(key: String): Boolean", "member" : "scala.collection.MapLike.isDefinedAt", "link" : "com\/regularoddity\/coveo\/ConfMap.html#isDefinedAt(key:K):Boolean", "kind" : "def"}, {"label" : "getOrElse", "tail" : "(key: String, default: ⇒ V1): V1", "member" : "scala.collection.MapLike.getOrElse", "link" : "com\/regularoddity\/coveo\/ConfMap.html#getOrElse[V1>:V](key:K,default:=>V1):V1", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.MapLike.isEmpty", "link" : "com\/regularoddity\/coveo\/ConfMap.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Config) ⇒ U): (String) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "com\/regularoddity\/coveo\/ConfMap.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "lift", "tail" : "(): (String) ⇒ Option[Config]", "member" : "scala.PartialFunction.lift", "link" : "com\/regularoddity\/coveo\/ConfMap.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Config) ⇒ C): PartialFunction[String, C]", "member" : "scala.PartialFunction.andThen", "link" : "com\/regularoddity\/coveo\/ConfMap.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "com\/regularoddity\/coveo\/ConfMap.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ String): (A) ⇒ Config", "member" : "scala.Function1.compose", "link" : "com\/regularoddity\/coveo\/ConfMap.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenMapLike.equals", "link" : "com\/regularoddity\/coveo\/ConfMap.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.GenMapLike.hashCode", "link" : "com\/regularoddity\/coveo\/ConfMap.html#hashCode():Int", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IterableView[(String, Config), HashMap[String, Config]]", "member" : "scala.collection.IterableLike.view", "link" : "com\/regularoddity\/coveo\/ConfMap.html#view(from:Int,until:Int):scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): IterableView[(String, Config), HashMap[String, Config]]", "member" : "scala.collection.IterableLike.view", "link" : "com\/regularoddity\/coveo\/ConfMap.html#view:scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "com\/regularoddity\/coveo\/ConfMap.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[(String, Config)]", "member" : "scala.collection.IterableLike.toStream", "link" : "com\/regularoddity\/coveo\/ConfMap.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "com\/regularoddity\/coveo\/ConfMap.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[HashMap[String, Config], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "com\/regularoddity\/coveo\/ConfMap.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[HashMap[String, Config], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "com\/regularoddity\/coveo\/ConfMap.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[HashMap[String, Config], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "com\/regularoddity\/coveo\/ConfMap.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "com\/regularoddity\/coveo\/ConfMap.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): HashMap[String, Config]", "member" : "scala.collection.IterableLike.dropRight", "link" : "com\/regularoddity\/coveo\/ConfMap.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): HashMap[String, Config]", "member" : "scala.collection.IterableLike.takeRight", "link" : "com\/regularoddity\/coveo\/ConfMap.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[HashMap[String, Config]]", "member" : "scala.collection.IterableLike.sliding", "link" : "com\/regularoddity\/coveo\/ConfMap.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[HashMap[String, Config]]", "member" : "scala.collection.IterableLike.sliding", "link" : "com\/regularoddity\/coveo\/ConfMap.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[HashMap[String, Config]]", "member" : "scala.collection.IterableLike.grouped", "link" : "com\/regularoddity\/coveo\/ConfMap.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: ((String, Config)) ⇒ Boolean): HashMap[String, Config]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "com\/regularoddity\/coveo\/ConfMap.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): HashMap[String, Config]", "member" : "scala.collection.IterableLike.drop", "link" : "com\/regularoddity\/coveo\/ConfMap.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): HashMap[String, Config]", "member" : "scala.collection.IterableLike.take", "link" : "com\/regularoddity\/coveo\/ConfMap.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): HashMap[String, Config]", "member" : "scala.collection.IterableLike.slice", "link" : "com\/regularoddity\/coveo\/ConfMap.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): (String, Config)", "member" : "scala.collection.IterableLike.head", "link" : "com\/regularoddity\/coveo\/ConfMap.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[(String, Config)]", "member" : "scala.collection.IterableLike.toIterator", "link" : "com\/regularoddity\/coveo\/ConfMap.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[(String, Config)]", "member" : "scala.collection.IterableLike.toIterable", "link" : "com\/regularoddity\/coveo\/ConfMap.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: ((String, Config), B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "com\/regularoddity\/coveo\/ConfMap.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: ((String, Config), B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "com\/regularoddity\/coveo\/ConfMap.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: ((String, Config)) ⇒ Boolean): Option[(String, Config)]", "member" : "scala.collection.IterableLike.find", "link" : "com\/regularoddity\/coveo\/ConfMap.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: ((String, Config)) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "com\/regularoddity\/coveo\/ConfMap.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: ((String, Config)) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "com\/regularoddity\/coveo\/ConfMap.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: HashMap[String, Config]): Iterable[(String, Config)]", "member" : "scala.collection.IterableLike.toCollection", "link" : "com\/regularoddity\/coveo\/ConfMap.html#toCollection(repr:Repr):Iterable[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Iterable[(String, Config)]", "member" : "scala.collection.IterableLike.thisCollection", "link" : "com\/regularoddity\/coveo\/ConfMap.html#thisCollection:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: ((String, Config)) ⇒ GenTraversableOnce[B]): Iterable[Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "com\/regularoddity\/coveo\/ConfMap.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: ((String, Config)) ⇒ GenTraversableOnce[B]): Iterable[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "com\/regularoddity\/coveo\/ConfMap.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: ((String, Config)) ⇒ (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "com\/regularoddity\/coveo\/ConfMap.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: ((String, Config)) ⇒ (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "com\/regularoddity\/coveo\/ConfMap.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "com\/regularoddity\/coveo\/ConfMap.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: ((String, Config)) ⇒ Boolean): FilterMonadic[(String, Config), HashMap[String, Config]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "com\/regularoddity\/coveo\/ConfMap.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, (String, Config), Col[(String, Config)]]): Col[(String, Config)]", "member" : "scala.collection.TraversableLike.to", "link" : "com\/regularoddity\/coveo\/ConfMap.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[(String, Config)]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "com\/regularoddity\/coveo\/ConfMap.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[HashMap[String, Config]]", "member" : "scala.collection.TraversableLike.inits", "link" : "com\/regularoddity\/coveo\/ConfMap.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[HashMap[String, Config]]", "member" : "scala.collection.TraversableLike.tails", "link" : "com\/regularoddity\/coveo\/ConfMap.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (HashMap[String, Config], HashMap[String, Config])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "com\/regularoddity\/coveo\/ConfMap.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: ((String, Config)) ⇒ Boolean): (HashMap[String, Config], HashMap[String, Config])", "member" : "scala.collection.TraversableLike.span", "link" : "com\/regularoddity\/coveo\/ConfMap.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: ((String, Config)) ⇒ Boolean): HashMap[String, Config]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "com\/regularoddity\/coveo\/ConfMap.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): HashMap[String, Config]", "member" : "scala.collection.TraversableLike.init", "link" : "com\/regularoddity\/coveo\/ConfMap.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[(String, Config)]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "com\/regularoddity\/coveo\/ConfMap.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): (String, Config)", "member" : "scala.collection.TraversableLike.last", "link" : "com\/regularoddity\/coveo\/ConfMap.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): HashMap[String, Config]", "member" : "scala.collection.TraversableLike.tail", "link" : "com\/regularoddity\/coveo\/ConfMap.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[(String, Config)]", "member" : "scala.collection.TraversableLike.headOption", "link" : "com\/regularoddity\/coveo\/ConfMap.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: ((String, Config), B) ⇒ B)(bf: CanBuildFrom[HashMap[String, Config], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "com\/regularoddity\/coveo\/ConfMap.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, (String, Config)) ⇒ B)(bf: CanBuildFrom[HashMap[String, Config], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "com\/regularoddity\/coveo\/ConfMap.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[HashMap[String, Config], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "com\/regularoddity\/coveo\/ConfMap.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: ((String, Config)) ⇒ K): Map[K, HashMap[String, Config]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "com\/regularoddity\/coveo\/ConfMap.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: ((String, Config)) ⇒ Boolean): (HashMap[String, Config], HashMap[String, Config])", "member" : "scala.collection.TraversableLike.partition", "link" : "com\/regularoddity\/coveo\/ConfMap.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[(String, Config), B])(bf: CanBuildFrom[HashMap[String, Config], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "com\/regularoddity\/coveo\/ConfMap.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filter", "tail" : "(p: ((String, Config)) ⇒ Boolean): HashMap[String, Config]", "member" : "scala.collection.TraversableLike.filter", "link" : "com\/regularoddity\/coveo\/ConfMap.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: ((String, Config)) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[HashMap[String, Config], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "com\/regularoddity\/coveo\/ConfMap.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: ((String, Config)) ⇒ B)(bf: CanBuildFrom[HashMap[String, Config], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "com\/regularoddity\/coveo\/ConfMap.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[HashMap[String, Config], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "com\/regularoddity\/coveo\/ConfMap.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[HashMap[String, Config], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "com\/regularoddity\/coveo\/ConfMap.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[HashMap[String, Config], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "com\/regularoddity\/coveo\/ConfMap.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "com\/regularoddity\/coveo\/ConfMap.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "com\/regularoddity\/coveo\/ConfMap.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): HashMap[String, Config]", "member" : "scala.collection.TraversableLike.repr", "link" : "com\/regularoddity\/coveo\/ConfMap.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "com\/regularoddity\/coveo\/ConfMap.html#Self=Repr", "kind" : "type"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "com\/regularoddity\/coveo\/ConfMap.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "com\/regularoddity\/coveo\/ConfMap.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "com\/regularoddity\/coveo\/ConfMap.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "com\/regularoddity\/coveo\/ConfMap.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "com\/regularoddity\/coveo\/ConfMap.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[(String, Config), (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "com\/regularoddity\/coveo\/ConfMap.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[(String, Config)]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "com\/regularoddity\/coveo\/ConfMap.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "com\/regularoddity\/coveo\/ConfMap.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[(String, Config)]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "com\/regularoddity\/coveo\/ConfMap.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[(String, Config)]", "member" : "scala.collection.TraversableOnce.toList", "link" : "com\/regularoddity\/coveo\/ConfMap.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "com\/regularoddity\/coveo\/ConfMap.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "com\/regularoddity\/coveo\/ConfMap.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "com\/regularoddity\/coveo\/ConfMap.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "com\/regularoddity\/coveo\/ConfMap.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: ((String, Config)) ⇒ B)(cmp: Ordering[B]): (String, Config)", "member" : "scala.collection.TraversableOnce.minBy", "link" : "com\/regularoddity\/coveo\/ConfMap.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: ((String, Config)) ⇒ B)(cmp: Ordering[B]): (String, Config)", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "com\/regularoddity\/coveo\/ConfMap.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): (String, Config)", "member" : "scala.collection.TraversableOnce.max", "link" : "com\/regularoddity\/coveo\/ConfMap.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): (String, Config)", "member" : "scala.collection.TraversableOnce.min", "link" : "com\/regularoddity\/coveo\/ConfMap.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "com\/regularoddity\/coveo\/ConfMap.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "com\/regularoddity\/coveo\/ConfMap.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, (String, Config)) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "com\/regularoddity\/coveo\/ConfMap.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "com\/regularoddity\/coveo\/ConfMap.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "com\/regularoddity\/coveo\/ConfMap.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "com\/regularoddity\/coveo\/ConfMap.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: ((String, Config), B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "com\/regularoddity\/coveo\/ConfMap.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, (String, Config)) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "com\/regularoddity\/coveo\/ConfMap.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, (String, Config)) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "com\/regularoddity\/coveo\/ConfMap.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, (String, Config)) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "com\/regularoddity\/coveo\/ConfMap.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: ((String, Config), B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "com\/regularoddity\/coveo\/ConfMap.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, (String, Config)) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "com\/regularoddity\/coveo\/ConfMap.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[(String, Config), B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "com\/regularoddity\/coveo\/ConfMap.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: ((String, Config)) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "com\/regularoddity\/coveo\/ConfMap.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "com\/regularoddity\/coveo\/ConfMap.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[(String, Config)]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "com\/regularoddity\/coveo\/ConfMap.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "com\/regularoddity\/coveo\/ConfMap.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/ConfMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/ConfMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/ConfMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/ConfMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/ConfMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/ConfMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/ConfMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ConfMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ConfMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ConfMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/ConfMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/ConfMap.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/ConfMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/ConfMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/ConfMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/regularoddity\/coveo\/ConfMap.html", "kind" : "class"}, {"name" : "com.regularoddity.coveo.DatabaseConnection", "shortDescription" : "A singleton for the PostgresConnection trait, which can otherwise be overridden.", "object" : "com\/regularoddity\/coveo\/DatabaseConnection$.html", "members_object" : [{"label" : "Cities", "tail" : "", "member" : "com.regularoddity.coveo.PostgresConnection.Cities", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#Citiesextendsslick.jdbc.PostgresProfile.api.Table[(Long,String,String,String,String,org.postgresql.geometric.PGpoint)]", "kind" : "class"}, {"label" : "PointType", "tail" : "", "member" : "com.regularoddity.coveo.PGPoint.PointType", "link" : "com\/regularoddity\/coveo\/PGPoint.html#PointTypeextendsPGPoint.this.TypedTypePGPoint", "kind" : "class"}, {"label" : "TypedTypePGPoint", "tail" : "", "member" : "com.regularoddity.coveo.PGPoint.TypedTypePGPoint", "link" : "com\/regularoddity\/coveo\/PGPoint.html#TypedTypePGPointextendsJdbcType[org.postgresql.geometric.PGpoint]withBaseTypedType[org.postgresql.geometric.PGpoint]", "kind" : "trait"}, {"label" : "GetPGPoint", "tail" : "", "member" : "com.regularoddity.coveo.PGPoint.GetPGPoint", "link" : "com\/regularoddity\/coveo\/PGPoint.html#GetPGPoint", "kind" : "implicit object"}, {"label" : "getScore", "tail" : "(coordinate: PGpoint, location: String, limit: Int, fuzzy: Boolean): Future[Vector[City]]", "member" : "com.regularoddity.coveo.PostgresConnection.getScore", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#getScore(coordinate:org.postgresql.geometric.PGpoint,location:String,limit:Int,fuzzy:Boolean):scala.concurrent.Future[Vector[com.regularoddity.coveo.City]]", "kind" : "def"}, {"label" : "getCities", "tail" : "(coordinate: PGpoint, location: String, limit: Int, fuzzy: Boolean): Future[Seq[City]]", "member" : "com.regularoddity.coveo.PostgresConnection.getCities", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#getCities(coordinate:org.postgresql.geometric.PGpoint,location:String,limit:Int,fuzzy:Boolean):scala.concurrent.Future[Seq[com.regularoddity.coveo.City]]", "kind" : "def"}, {"label" : "getQuery", "tail" : "(coordinate: PGpoint, location: String, limit: Int, fuzzy: Boolean): Query[Cities, (Long, String, String, String, String, PGpoint), Seq]", "member" : "com.regularoddity.coveo.PostgresConnection.getQuery", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#getQuery(coordinate:org.postgresql.geometric.PGpoint,location:String,limit:Int,fuzzy:Boolean):slick.lifted.Query[PostgresConnection.this.Cities,(Long,String,String,String,String,org.postgresql.geometric.PGpoint),Seq]", "kind" : "def"}, {"label" : "cityResult", "tail" : ": GetResult[City]", "member" : "com.regularoddity.coveo.PostgresConnection.cityResult", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#cityResult:slick.jdbc.GetResult[com.regularoddity.coveo.City]", "kind" : "implicit val"}, {"label" : "cities", "tail" : ": TableQuery[Cities]", "member" : "com.regularoddity.coveo.PostgresConnection.cities", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#cities:slick.lifted.TableQuery[PostgresConnection.this.Cities]", "kind" : "val"}, {"label" : "db", "tail" : ": DatabaseDef", "member" : "com.regularoddity.coveo.PostgresConnection.db", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#db:slick.jdbc.PostgresProfile.backend.DatabaseDef", "kind" : "val"}, {"label" : "dbDriver", "tail" : ": String", "member" : "com.regularoddity.coveo.PostgresConnection.dbDriver", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#dbDriver:String", "kind" : "val"}, {"label" : "dbUrl", "tail" : ": String", "member" : "com.regularoddity.coveo.PostgresConnection.dbUrl", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#dbUrl:String", "kind" : "val"}, {"label" : "PGpointType", "tail" : ": PointType", "member" : "com.regularoddity.coveo.PostgresConnection.PGpointType", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#PGpointType:PostgresConnection.this.PointType", "kind" : "implicit val"}, {"label" : "ExecutionContext", "tail" : ": ExecutionContextExecutor", "member" : "com.regularoddity.coveo.PostgresConnection.ExecutionContext", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#ExecutionContext:scala.concurrent.ExecutionContextExecutor", "kind" : "implicit val"}, {"label" : "logger", "tail" : ": Logger", "member" : "org.apache.logging.log4j.scala.Logging.logger", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#logger:org.apache.logging.log4j.scala.Logger", "kind" : "val"}, {"label" : "PGpointClassTag", "tail" : ": ClassTag[PGpoint] { def runtimeClass: Class[org.postgresql.geometric.PGpoint] }", "member" : "com.regularoddity.coveo.PGPoint.PGpointClassTag", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#PGpointClassTag:scala.reflect.ClassTag[org.postgresql.geometric.PGpoint]{defruntimeClass:Class[org.postgresql.geometric.PGpoint]}", "kind" : "implicit val"}, {"label" : "CityClassTag", "tail" : ": ClassTag[City] { def runtimeClass: Class[com.regularoddity.coveo.City] }", "member" : "com.regularoddity.coveo.PGPoint.CityClassTag", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#CityClassTag:scala.reflect.ClassTag[com.regularoddity.coveo.City]{defruntimeClass:Class[com.regularoddity.coveo.City]}", "kind" : "implicit val"}, {"label" : "distance", "tail" : ": (Rep[PGpoint], Rep[PGpoint]) ⇒ Rep[Double]", "member" : "com.regularoddity.coveo.DatabaseHelpers.distance", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#distance:(slick.lifted.Rep[org.postgresql.geometric.PGpoint],slick.lifted.Rep[org.postgresql.geometric.PGpoint])=>slick.lifted.Rep[Double]", "kind" : "val"}, {"label" : "fuzzyString", "tail" : "(s: String): String", "member" : "com.regularoddity.coveo.DatabaseHelpers.fuzzyString", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#fuzzyString(s:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/DatabaseConnection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.regularoddity.coveo.DatabaseHelpers", "members_trait" : [{"label" : "distance", "tail" : ": (Rep[PGpoint], Rep[PGpoint]) ⇒ Rep[Double]", "member" : "com.regularoddity.coveo.DatabaseHelpers.distance", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html#distance:(slick.lifted.Rep[org.postgresql.geometric.PGpoint],slick.lifted.Rep[org.postgresql.geometric.PGpoint])=>slick.lifted.Rep[Double]", "kind" : "val"}, {"label" : "fuzzyString", "tail" : "(s: String): String", "member" : "com.regularoddity.coveo.DatabaseHelpers.fuzzyString", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html#fuzzyString(s:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/DatabaseHelpers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Extra helper methods for Slick database classes.", "trait" : "com\/regularoddity\/coveo\/DatabaseHelpers.html", "kind" : "trait"}, {"name" : "com.regularoddity.coveo.JsonSupport", "members_trait" : [{"label" : "citiesJsonFormat", "tail" : ": CitiesJsonFormat.type", "member" : "com.regularoddity.coveo.JsonSupport.citiesJsonFormat", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#citiesJsonFormat:com.regularoddity.coveo.CityProtocol.CitiesJsonFormat.type", "kind" : "implicit val"}, {"label" : "cityJsonFormat", "tail" : ": CityJsonFormat.type", "member" : "com.regularoddity.coveo.JsonSupport.cityJsonFormat", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#cityJsonFormat:com.regularoddity.coveo.CityProtocol.CityJsonFormat.type", "kind" : "implicit val"}, {"label" : "sprayJsValueMarshaller", "tail" : "(printer: JsonPrinter): ToEntityMarshaller[JsValue]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsValueMarshaller", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#sprayJsValueMarshaller(implicitprinter:spray.json.JsonPrinter):akka.http.scaladsl.marshalling.ToEntityMarshaller[spray.json.JsValue]", "kind" : "implicit def"}, {"label" : "sprayJsonMarshaller", "tail" : "(writer: RootJsonWriter[T], printer: JsonPrinter): ToEntityMarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonMarshaller", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#sprayJsonMarshaller[T](implicitwriter:spray.json.RootJsonWriter[T],implicitprinter:spray.json.JsonPrinter):akka.http.scaladsl.marshalling.ToEntityMarshaller[T]", "kind" : "implicit def"}, {"label" : "sprayJsonMarshallerConverter", "tail" : "(writer: RootJsonWriter[T])(printer: JsonPrinter): ToEntityMarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonMarshallerConverter", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#sprayJsonMarshallerConverter[T](writer:spray.json.RootJsonWriter[T])(implicitprinter:spray.json.JsonPrinter):akka.http.scaladsl.marshalling.ToEntityMarshaller[T]", "kind" : "implicit def"}, {"label" : "sprayJsonSourceReader", "tail" : "(reader: RootJsonReader[T], support: EntityStreamingSupport): FromEntityUnmarshaller[Source[T, NotUsed]]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonSourceReader", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#sprayJsonSourceReader[T](implicitreader:spray.json.RootJsonReader[T],implicitsupport:akka.http.scaladsl.common.EntityStreamingSupport):akka.http.scaladsl.unmarshalling.FromEntityUnmarshaller[akka.stream.scaladsl.Source[T,akka.NotUsed]]", "kind" : "implicit def"}, {"label" : "sprayJsonByteStringUnmarshaller", "tail" : "(reader: RootJsonReader[T]): FromByteStringUnmarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonByteStringUnmarshaller", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#sprayJsonByteStringUnmarshaller[T](implicitreader:spray.json.RootJsonReader[T]):akka.http.scaladsl.unmarshalling.FromByteStringUnmarshaller[T]", "kind" : "implicit def"}, {"label" : "sprayJsValueByteStringUnmarshaller", "tail" : "(): FromByteStringUnmarshaller[JsValue]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsValueByteStringUnmarshaller", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#sprayJsValueByteStringUnmarshaller[T]:akka.http.scaladsl.unmarshalling.FromByteStringUnmarshaller[spray.json.JsValue]", "kind" : "implicit def"}, {"label" : "sprayJsValueUnmarshaller", "tail" : "(): FromEntityUnmarshaller[JsValue]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsValueUnmarshaller", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#sprayJsValueUnmarshaller:akka.http.scaladsl.unmarshalling.FromEntityUnmarshaller[spray.json.JsValue]", "kind" : "implicit def"}, {"label" : "sprayJsonUnmarshaller", "tail" : "(reader: RootJsonReader[T]): FromEntityUnmarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonUnmarshaller", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#sprayJsonUnmarshaller[T](implicitreader:spray.json.RootJsonReader[T]):akka.http.scaladsl.unmarshalling.FromEntityUnmarshaller[T]", "kind" : "implicit def"}, {"label" : "sprayJsonUnmarshallerConverter", "tail" : "(reader: RootJsonReader[T]): FromEntityUnmarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonUnmarshallerConverter", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#sprayJsonUnmarshallerConverter[T](reader:spray.json.RootJsonReader[T]):akka.http.scaladsl.unmarshalling.FromEntityUnmarshaller[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/JsonSupport.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/JsonSupport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Add support for implicitly converting between JSON and known types in Spray.", "trait" : "com\/regularoddity\/coveo\/JsonSupport.html", "kind" : "trait"}, {"name" : "com.regularoddity.coveo.LocationRegistryActor", "shortDescription" : "Companion object for the LocationRegistryActor.", "object" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html", "members_class" : [{"label" : "receive", "tail" : "(): Receive", "member" : "com.regularoddity.coveo.LocationRegistryActor.receive", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#receive:LocationRegistryActor.this.Receive", "kind" : "def"}, {"label" : "timeout", "tail" : ": Timeout", "member" : "com.regularoddity.coveo.LocationRegistryActor.timeout", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#timeout:akka.util.Timeout", "kind" : "implicit val"}, {"label" : "ec", "tail" : ": ExecutionContext", "member" : "com.regularoddity.coveo.LocationRegistryActor.ec", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#ec:scala.concurrent.ExecutionContext", "kind" : "implicit val"}, {"member" : "com.regularoddity.coveo.LocationRegistryActor#<init>", "error" : "unsupported entity"}, {"label" : "log", "tail" : "(): LoggingAdapter", "member" : "akka.actor.ActorLogging.log", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#log:akka.event.LoggingAdapter", "kind" : "def"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.actor.Actor.unhandled", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.preRestart", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.postStop", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#postStop():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.aroundPostRestart", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.aroundPreRestart", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPostStop", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPreStart", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: akka.actor.Actor.Receive, msg: Any): Unit", "member" : "akka.actor.Actor.aroundReceive", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#aroundReceive(receive:akka.actor.Actor.Receive,msg:Any):Unit", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "props", "tail" : "(): Props", "member" : "com.regularoddity.coveo.LocationRegistryActor.props", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html#props:akka.actor.Props", "kind" : "def"}, {"label" : "GetCities", "tail" : "", "member" : "com.regularoddity.coveo.LocationRegistryActor.GetCities", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html#GetCitiesextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/LocationRegistryActor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/regularoddity\/coveo\/LocationRegistryActor.html", "kind" : "object"}, {"name" : "com.regularoddity.coveo.LocationRoute$", "shortDescription" : "The definitions for the routes that relate to the locations API.", "object" : "com\/regularoddity\/coveo\/LocationRoute$$.html", "members_object" : [{"label" : "routes", "tail" : ": Route", "member" : "com.regularoddity.coveo.LocationRoute$.routes", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#routes:akka.http.scaladsl.server.Route", "kind" : "lazy val"}, {"label" : "cityRegistryActor", "tail" : ": ActorRef", "member" : "com.regularoddity.coveo.LocationRoute$.cityRegistryActor", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#cityRegistryActor:akka.actor.ActorRef", "kind" : "val"}, {"label" : "materializer", "tail" : ": ActorMaterializer", "member" : "com.regularoddity.coveo.LocationRoute$.materializer", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#materializer:akka.stream.ActorMaterializer", "kind" : "implicit val"}, {"label" : "system", "tail" : ": ActorSystem", "member" : "com.regularoddity.coveo.LocationRoute$.system", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#system:akka.actor.ActorSystem", "kind" : "implicit val"}, {"label" : "cityRoutes", "tail" : ": Route", "member" : "com.regularoddity.coveo.LocationRoutes.cityRoutes", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#cityRoutes:akka.http.scaladsl.server.Route", "kind" : "lazy val"}, {"label" : "timeout", "tail" : ": Timeout", "member" : "com.regularoddity.coveo.LocationRoutes.timeout", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#timeout:akka.util.Timeout", "kind" : "implicit lazy val"}, {"label" : "log", "tail" : ": LoggingAdapter", "member" : "com.regularoddity.coveo.LocationRoutes.log", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#log:akka.event.LoggingAdapter", "kind" : "lazy val"}, {"label" : "logger", "tail" : ": Logger", "member" : "org.apache.logging.log4j.scala.Logging.logger", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#logger:org.apache.logging.log4j.scala.Logger", "kind" : "val"}, {"label" : "citiesJsonFormat", "tail" : ": CitiesJsonFormat.type", "member" : "com.regularoddity.coveo.JsonSupport.citiesJsonFormat", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#citiesJsonFormat:com.regularoddity.coveo.CityProtocol.CitiesJsonFormat.type", "kind" : "implicit val"}, {"label" : "cityJsonFormat", "tail" : ": CityJsonFormat.type", "member" : "com.regularoddity.coveo.JsonSupport.cityJsonFormat", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#cityJsonFormat:com.regularoddity.coveo.CityProtocol.CityJsonFormat.type", "kind" : "implicit val"}, {"label" : "sprayJsValueMarshaller", "tail" : "(printer: JsonPrinter): ToEntityMarshaller[JsValue]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsValueMarshaller", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#sprayJsValueMarshaller(implicitprinter:spray.json.JsonPrinter):akka.http.scaladsl.marshalling.ToEntityMarshaller[spray.json.JsValue]", "kind" : "implicit def"}, {"label" : "sprayJsonMarshaller", "tail" : "(writer: RootJsonWriter[T], printer: JsonPrinter): ToEntityMarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonMarshaller", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#sprayJsonMarshaller[T](implicitwriter:spray.json.RootJsonWriter[T],implicitprinter:spray.json.JsonPrinter):akka.http.scaladsl.marshalling.ToEntityMarshaller[T]", "kind" : "implicit def"}, {"label" : "sprayJsonMarshallerConverter", "tail" : "(writer: RootJsonWriter[T])(printer: JsonPrinter): ToEntityMarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonMarshallerConverter", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#sprayJsonMarshallerConverter[T](writer:spray.json.RootJsonWriter[T])(implicitprinter:spray.json.JsonPrinter):akka.http.scaladsl.marshalling.ToEntityMarshaller[T]", "kind" : "implicit def"}, {"label" : "sprayJsonSourceReader", "tail" : "(reader: RootJsonReader[T], support: EntityStreamingSupport): FromEntityUnmarshaller[Source[T, NotUsed]]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonSourceReader", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#sprayJsonSourceReader[T](implicitreader:spray.json.RootJsonReader[T],implicitsupport:akka.http.scaladsl.common.EntityStreamingSupport):akka.http.scaladsl.unmarshalling.FromEntityUnmarshaller[akka.stream.scaladsl.Source[T,akka.NotUsed]]", "kind" : "implicit def"}, {"label" : "sprayJsonByteStringUnmarshaller", "tail" : "(reader: RootJsonReader[T]): FromByteStringUnmarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonByteStringUnmarshaller", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#sprayJsonByteStringUnmarshaller[T](implicitreader:spray.json.RootJsonReader[T]):akka.http.scaladsl.unmarshalling.FromByteStringUnmarshaller[T]", "kind" : "implicit def"}, {"label" : "sprayJsValueByteStringUnmarshaller", "tail" : "(): FromByteStringUnmarshaller[JsValue]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsValueByteStringUnmarshaller", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#sprayJsValueByteStringUnmarshaller[T]:akka.http.scaladsl.unmarshalling.FromByteStringUnmarshaller[spray.json.JsValue]", "kind" : "implicit def"}, {"label" : "sprayJsValueUnmarshaller", "tail" : "(): FromEntityUnmarshaller[JsValue]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsValueUnmarshaller", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#sprayJsValueUnmarshaller:akka.http.scaladsl.unmarshalling.FromEntityUnmarshaller[spray.json.JsValue]", "kind" : "implicit def"}, {"label" : "sprayJsonUnmarshaller", "tail" : "(reader: RootJsonReader[T]): FromEntityUnmarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonUnmarshaller", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#sprayJsonUnmarshaller[T](implicitreader:spray.json.RootJsonReader[T]):akka.http.scaladsl.unmarshalling.FromEntityUnmarshaller[T]", "kind" : "implicit def"}, {"label" : "sprayJsonUnmarshallerConverter", "tail" : "(reader: RootJsonReader[T]): FromEntityUnmarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonUnmarshallerConverter", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#sprayJsonUnmarshallerConverter[T](reader:spray.json.RootJsonReader[T]):akka.http.scaladsl.unmarshalling.FromEntityUnmarshaller[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/LocationRoute$$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.regularoddity.coveo.LocationRoutes", "members_trait" : [{"label" : "cityRoutes", "tail" : ": Route", "member" : "com.regularoddity.coveo.LocationRoutes.cityRoutes", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#cityRoutes:akka.http.scaladsl.server.Route", "kind" : "lazy val"}, {"label" : "timeout", "tail" : ": Timeout", "member" : "com.regularoddity.coveo.LocationRoutes.timeout", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#timeout:akka.util.Timeout", "kind" : "implicit lazy val"}, {"label" : "log", "tail" : ": LoggingAdapter", "member" : "com.regularoddity.coveo.LocationRoutes.log", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#log:akka.event.LoggingAdapter", "kind" : "lazy val"}, {"label" : "logger", "tail" : ": Logger", "member" : "org.apache.logging.log4j.scala.Logging.logger", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#logger:org.apache.logging.log4j.scala.Logger", "kind" : "val"}, {"label" : "citiesJsonFormat", "tail" : ": CitiesJsonFormat.type", "member" : "com.regularoddity.coveo.JsonSupport.citiesJsonFormat", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#citiesJsonFormat:com.regularoddity.coveo.CityProtocol.CitiesJsonFormat.type", "kind" : "implicit val"}, {"label" : "cityJsonFormat", "tail" : ": CityJsonFormat.type", "member" : "com.regularoddity.coveo.JsonSupport.cityJsonFormat", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#cityJsonFormat:com.regularoddity.coveo.CityProtocol.CityJsonFormat.type", "kind" : "implicit val"}, {"label" : "sprayJsValueMarshaller", "tail" : "(printer: JsonPrinter): ToEntityMarshaller[JsValue]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsValueMarshaller", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#sprayJsValueMarshaller(implicitprinter:spray.json.JsonPrinter):akka.http.scaladsl.marshalling.ToEntityMarshaller[spray.json.JsValue]", "kind" : "implicit def"}, {"label" : "sprayJsonMarshaller", "tail" : "(writer: RootJsonWriter[T], printer: JsonPrinter): ToEntityMarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonMarshaller", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#sprayJsonMarshaller[T](implicitwriter:spray.json.RootJsonWriter[T],implicitprinter:spray.json.JsonPrinter):akka.http.scaladsl.marshalling.ToEntityMarshaller[T]", "kind" : "implicit def"}, {"label" : "sprayJsonMarshallerConverter", "tail" : "(writer: RootJsonWriter[T])(printer: JsonPrinter): ToEntityMarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonMarshallerConverter", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#sprayJsonMarshallerConverter[T](writer:spray.json.RootJsonWriter[T])(implicitprinter:spray.json.JsonPrinter):akka.http.scaladsl.marshalling.ToEntityMarshaller[T]", "kind" : "implicit def"}, {"label" : "sprayJsonSourceReader", "tail" : "(reader: RootJsonReader[T], support: EntityStreamingSupport): FromEntityUnmarshaller[Source[T, NotUsed]]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonSourceReader", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#sprayJsonSourceReader[T](implicitreader:spray.json.RootJsonReader[T],implicitsupport:akka.http.scaladsl.common.EntityStreamingSupport):akka.http.scaladsl.unmarshalling.FromEntityUnmarshaller[akka.stream.scaladsl.Source[T,akka.NotUsed]]", "kind" : "implicit def"}, {"label" : "sprayJsonByteStringUnmarshaller", "tail" : "(reader: RootJsonReader[T]): FromByteStringUnmarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonByteStringUnmarshaller", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#sprayJsonByteStringUnmarshaller[T](implicitreader:spray.json.RootJsonReader[T]):akka.http.scaladsl.unmarshalling.FromByteStringUnmarshaller[T]", "kind" : "implicit def"}, {"label" : "sprayJsValueByteStringUnmarshaller", "tail" : "(): FromByteStringUnmarshaller[JsValue]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsValueByteStringUnmarshaller", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#sprayJsValueByteStringUnmarshaller[T]:akka.http.scaladsl.unmarshalling.FromByteStringUnmarshaller[spray.json.JsValue]", "kind" : "implicit def"}, {"label" : "sprayJsValueUnmarshaller", "tail" : "(): FromEntityUnmarshaller[JsValue]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsValueUnmarshaller", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#sprayJsValueUnmarshaller:akka.http.scaladsl.unmarshalling.FromEntityUnmarshaller[spray.json.JsValue]", "kind" : "implicit def"}, {"label" : "sprayJsonUnmarshaller", "tail" : "(reader: RootJsonReader[T]): FromEntityUnmarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonUnmarshaller", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#sprayJsonUnmarshaller[T](implicitreader:spray.json.RootJsonReader[T]):akka.http.scaladsl.unmarshalling.FromEntityUnmarshaller[T]", "kind" : "implicit def"}, {"label" : "sprayJsonUnmarshallerConverter", "tail" : "(reader: RootJsonReader[T]): FromEntityUnmarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonUnmarshallerConverter", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#sprayJsonUnmarshallerConverter[T](reader:spray.json.RootJsonReader[T]):akka.http.scaladsl.unmarshalling.FromEntityUnmarshaller[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "cityRegistryActor", "tail" : "(): ActorRef", "member" : "com.regularoddity.coveo.LocationRoutes.cityRegistryActor", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#cityRegistryActor:akka.actor.ActorRef", "kind" : "abstract def"}, {"label" : "system", "tail" : "(): ActorSystem", "member" : "com.regularoddity.coveo.LocationRoutes.system", "link" : "com\/regularoddity\/coveo\/LocationRoutes.html#system:akka.actor.ActorSystem", "kind" : "implicit abstract def"}], "shortDescription" : "REST routes for the location service.", "trait" : "com\/regularoddity\/coveo\/LocationRoutes.html", "kind" : "trait"}, {"name" : "com.regularoddity.coveo.PGPoint", "members_trait" : [{"label" : "PointType", "tail" : "", "member" : "com.regularoddity.coveo.PGPoint.PointType", "link" : "com\/regularoddity\/coveo\/PGPoint.html#PointTypeextendsPGPoint.this.TypedTypePGPoint", "kind" : "class"}, {"label" : "TypedTypePGPoint", "tail" : "", "member" : "com.regularoddity.coveo.PGPoint.TypedTypePGPoint", "link" : "com\/regularoddity\/coveo\/PGPoint.html#TypedTypePGPointextendsJdbcType[org.postgresql.geometric.PGpoint]withBaseTypedType[org.postgresql.geometric.PGpoint]", "kind" : "trait"}, {"label" : "PGpointClassTag", "tail" : ": ClassTag[PGpoint] { def runtimeClass: Class[org.postgresql.geometric.PGpoint] }", "member" : "com.regularoddity.coveo.PGPoint.PGpointClassTag", "link" : "com\/regularoddity\/coveo\/PGPoint.html#PGpointClassTag:scala.reflect.ClassTag[org.postgresql.geometric.PGpoint]{defruntimeClass:Class[org.postgresql.geometric.PGpoint]}", "kind" : "implicit val"}, {"label" : "CityClassTag", "tail" : ": ClassTag[City] { def runtimeClass: Class[com.regularoddity.coveo.City] }", "member" : "com.regularoddity.coveo.PGPoint.CityClassTag", "link" : "com\/regularoddity\/coveo\/PGPoint.html#CityClassTag:scala.reflect.ClassTag[com.regularoddity.coveo.City]{defruntimeClass:Class[com.regularoddity.coveo.City]}", "kind" : "implicit val"}, {"label" : "GetPGPoint", "tail" : "", "member" : "com.regularoddity.coveo.PGPoint.GetPGPoint", "link" : "com\/regularoddity\/coveo\/PGPoint.html#GetPGPoint", "kind" : "implicit object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/PGPoint.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/PGPoint.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/PGPoint.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/PGPoint.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/PGPoint.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/PGPoint.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/PGPoint.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/PGPoint.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/PGPoint.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/PGPoint.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/PGPoint.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/PGPoint.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/regularoddity\/coveo\/PGPoint.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/regularoddity\/coveo\/PGPoint.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/regularoddity\/coveo\/PGPoint.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/regularoddity\/coveo\/PGPoint.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/PGPoint.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/PGPoint.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/PGPoint.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "The implicits necessary for extracting data of type PGpoint from the database using Slick's DSL.", "object" : "com\/regularoddity\/coveo\/PGPoint$.html", "members_object" : [{"label" : "PointConverterTo", "tail" : "", "member" : "com.regularoddity.coveo.PGPoint.PointConverterTo", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#PointConverterToextendsAnyRef", "kind" : "class"}, {"label" : "PointVectorConverterFrom", "tail" : "", "member" : "com.regularoddity.coveo.PGPoint.PointVectorConverterFrom", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#PointVectorConverterFromextendsAnyRef", "kind" : "class"}, {"label" : "PointStringConverterFrom", "tail" : "", "member" : "com.regularoddity.coveo.PGPoint.PointStringConverterFrom", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#PointStringConverterFromextendsAnyRef", "kind" : "class"}, {"label" : "PointConverter", "tail" : "(p: PGpoint): PointConverterTo", "member" : "com.regularoddity.coveo.PGPoint.PointConverter", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#PointConverter(p:org.postgresql.geometric.PGpoint):com.regularoddity.coveo.PGPoint.PointConverterTo", "kind" : "implicit def"}, {"label" : "PointConverter", "tail" : "(v: Vector[Double]): PointVectorConverterFrom", "member" : "com.regularoddity.coveo.PGPoint.PointConverter", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#PointConverter(v:Vector[Double]):com.regularoddity.coveo.PGPoint.PointVectorConverterFrom", "kind" : "implicit def"}, {"label" : "PointConverter", "tail" : "(s: String): PointStringConverterFrom", "member" : "com.regularoddity.coveo.PGPoint.PointConverter", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#PointConverter(s:String):com.regularoddity.coveo.PGPoint.PointStringConverterFrom", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/PGPoint$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/PGPoint$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/regularoddity\/coveo\/PGPoint.html", "kind" : "trait"}, {"name" : "com.regularoddity.coveo.PostgresConnection", "members_trait" : [{"label" : "PointType", "tail" : "", "member" : "com.regularoddity.coveo.PGPoint.PointType", "link" : "com\/regularoddity\/coveo\/PGPoint.html#PointTypeextendsPGPoint.this.TypedTypePGPoint", "kind" : "class"}, {"label" : "TypedTypePGPoint", "tail" : "", "member" : "com.regularoddity.coveo.PGPoint.TypedTypePGPoint", "link" : "com\/regularoddity\/coveo\/PGPoint.html#TypedTypePGPointextendsJdbcType[org.postgresql.geometric.PGpoint]withBaseTypedType[org.postgresql.geometric.PGpoint]", "kind" : "trait"}, {"label" : "GetPGPoint", "tail" : "", "member" : "com.regularoddity.coveo.PGPoint.GetPGPoint", "link" : "com\/regularoddity\/coveo\/PGPoint.html#GetPGPoint", "kind" : "implicit object"}, {"label" : "getScore", "tail" : "(coordinate: PGpoint, location: String, limit: Int, fuzzy: Boolean): Future[Vector[City]]", "member" : "com.regularoddity.coveo.PostgresConnection.getScore", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#getScore(coordinate:org.postgresql.geometric.PGpoint,location:String,limit:Int,fuzzy:Boolean):scala.concurrent.Future[Vector[com.regularoddity.coveo.City]]", "kind" : "def"}, {"label" : "getCities", "tail" : "(coordinate: PGpoint, location: String, limit: Int, fuzzy: Boolean): Future[Seq[City]]", "member" : "com.regularoddity.coveo.PostgresConnection.getCities", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#getCities(coordinate:org.postgresql.geometric.PGpoint,location:String,limit:Int,fuzzy:Boolean):scala.concurrent.Future[Seq[com.regularoddity.coveo.City]]", "kind" : "def"}, {"label" : "getQuery", "tail" : "(coordinate: PGpoint, location: String, limit: Int, fuzzy: Boolean): Query[Cities, (Long, String, String, String, String, PGpoint), Seq]", "member" : "com.regularoddity.coveo.PostgresConnection.getQuery", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#getQuery(coordinate:org.postgresql.geometric.PGpoint,location:String,limit:Int,fuzzy:Boolean):slick.lifted.Query[PostgresConnection.this.Cities,(Long,String,String,String,String,org.postgresql.geometric.PGpoint),Seq]", "kind" : "def"}, {"label" : "cityResult", "tail" : ": GetResult[City]", "member" : "com.regularoddity.coveo.PostgresConnection.cityResult", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#cityResult:slick.jdbc.GetResult[com.regularoddity.coveo.City]", "kind" : "implicit val"}, {"label" : "cities", "tail" : ": TableQuery[Cities]", "member" : "com.regularoddity.coveo.PostgresConnection.cities", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#cities:slick.lifted.TableQuery[PostgresConnection.this.Cities]", "kind" : "val"}, {"label" : "Cities", "tail" : "", "member" : "com.regularoddity.coveo.PostgresConnection.Cities", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#Citiesextendsslick.jdbc.PostgresProfile.api.Table[(Long,String,String,String,String,org.postgresql.geometric.PGpoint)]", "kind" : "class"}, {"label" : "db", "tail" : ": DatabaseDef", "member" : "com.regularoddity.coveo.PostgresConnection.db", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#db:slick.jdbc.PostgresProfile.backend.DatabaseDef", "kind" : "val"}, {"label" : "dbDriver", "tail" : ": String", "member" : "com.regularoddity.coveo.PostgresConnection.dbDriver", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#dbDriver:String", "kind" : "val"}, {"label" : "dbUrl", "tail" : ": String", "member" : "com.regularoddity.coveo.PostgresConnection.dbUrl", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#dbUrl:String", "kind" : "val"}, {"label" : "PGpointType", "tail" : ": PointType", "member" : "com.regularoddity.coveo.PostgresConnection.PGpointType", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#PGpointType:PostgresConnection.this.PointType", "kind" : "implicit val"}, {"label" : "ExecutionContext", "tail" : ": ExecutionContextExecutor", "member" : "com.regularoddity.coveo.PostgresConnection.ExecutionContext", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#ExecutionContext:scala.concurrent.ExecutionContextExecutor", "kind" : "implicit val"}, {"label" : "logger", "tail" : ": Logger", "member" : "org.apache.logging.log4j.scala.Logging.logger", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#logger:org.apache.logging.log4j.scala.Logger", "kind" : "val"}, {"label" : "PGpointClassTag", "tail" : ": ClassTag[PGpoint] { def runtimeClass: Class[org.postgresql.geometric.PGpoint] }", "member" : "com.regularoddity.coveo.PGPoint.PGpointClassTag", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#PGpointClassTag:scala.reflect.ClassTag[org.postgresql.geometric.PGpoint]{defruntimeClass:Class[org.postgresql.geometric.PGpoint]}", "kind" : "implicit val"}, {"label" : "CityClassTag", "tail" : ": ClassTag[City] { def runtimeClass: Class[com.regularoddity.coveo.City] }", "member" : "com.regularoddity.coveo.PGPoint.CityClassTag", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#CityClassTag:scala.reflect.ClassTag[com.regularoddity.coveo.City]{defruntimeClass:Class[com.regularoddity.coveo.City]}", "kind" : "implicit val"}, {"label" : "distance", "tail" : ": (Rep[PGpoint], Rep[PGpoint]) ⇒ Rep[Double]", "member" : "com.regularoddity.coveo.DatabaseHelpers.distance", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#distance:(slick.lifted.Rep[org.postgresql.geometric.PGpoint],slick.lifted.Rep[org.postgresql.geometric.PGpoint])=>slick.lifted.Rep[Double]", "kind" : "val"}, {"label" : "fuzzyString", "tail" : "(s: String): String", "member" : "com.regularoddity.coveo.DatabaseHelpers.fuzzyString", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#fuzzyString(s:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/PostgresConnection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "All the methods to communicate with the database.", "trait" : "com\/regularoddity\/coveo\/PostgresConnection.html", "kind" : "trait"}, {"name" : "com.regularoddity.coveo.Server", "shortDescription" : "The main interface for this service.", "members_class" : [{"member" : "com.regularoddity.coveo.Server#<init>", "error" : "unsupported entity"}, {"label" : "config", "tail" : ": Configuration", "member" : "com.regularoddity.coveo.Server.config", "link" : "com\/regularoddity\/coveo\/Server.html#config:com.regularoddity.coveo.Configuration", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/Server.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/Server.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/Server.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/Server.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/Server.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/Server.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/Server.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/Server.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/Server.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/Server.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/Server.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/Server.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/regularoddity\/coveo\/Server.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/regularoddity\/coveo\/Server.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/regularoddity\/coveo\/Server.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/regularoddity\/coveo\/Server.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/Server.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/Server.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/Server.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/regularoddity\/coveo\/Server.html", "kind" : "class"}, {"name" : "com.regularoddity.coveo.ServerApplication", "shortDescription" : "", "members_class" : [{"label" : "routes", "tail" : ": Route", "member" : "com.regularoddity.coveo.ServerApplication.routes", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#routes:akka.http.scaladsl.server.Route", "kind" : "lazy val"}, {"label" : "materializer", "tail" : ": ActorMaterializer", "member" : "com.regularoddity.coveo.ServerApplication.materializer", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#materializer:akka.stream.ActorMaterializer", "kind" : "implicit val"}, {"label" : "system", "tail" : ": ActorSystem", "member" : "com.regularoddity.coveo.ServerApplication.system", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#system:akka.actor.ActorSystem", "kind" : "implicit val"}, {"member" : "com.regularoddity.coveo.ServerApplication#<init>", "error" : "unsupported entity"}, {"label" : "config", "tail" : ": Configuration", "member" : "com.regularoddity.coveo.ServerApplication.config", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#config:com.regularoddity.coveo.Configuration", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "org.apache.logging.log4j.scala.Logging.logger", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#logger:org.apache.logging.log4j.scala.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/ServerApplication.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/ServerApplication.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/regularoddity\/coveo\/ServerApplication.html", "kind" : "class"}, {"name" : "com.regularoddity.coveo.ServiceApp", "shortDescription" : "The entry point for this app.", "object" : "com\/regularoddity\/coveo\/ServiceApp$.html", "members_object" : [{"label" : "injector", "tail" : ": Injector", "member" : "com.regularoddity.coveo.ServiceApp.injector", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#injector:com.google.inject.Injector", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: ⇒ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#executionStart:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/ServiceApp$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.regularoddity.coveo.ServicesMap", "shortDescription" : "", "members_class" : [{"label" : "MappedValues", "tail" : "", "member" : "scala.collection.MapLike.MappedValues", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#MappedValues[W]extendsAbstractMap[K,W]withDefaultMap[K,W]", "kind" : "class"}, {"label" : "FilteredKeys", "tail" : "", "member" : "scala.collection.MapLike.FilteredKeys", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#FilteredKeysextendsAbstractMap[K,V]withDefaultMap[K,V]", "kind" : "class"}, {"label" : "DefaultValuesIterable", "tail" : "", "member" : "scala.collection.MapLike.DefaultValuesIterable", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#DefaultValuesIterableextendsAbstractIterable[V]withIterable[V]withSerializable", "kind" : "class"}, {"label" : "DefaultKeySet", "tail" : "", "member" : "scala.collection.MapLike.DefaultKeySet", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#DefaultKeySetextendsAbstractSet[K]withSet[K]withSerializable", "kind" : "class"}, {"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "replace", "tail" : "(k: String, v: Server): Option[Server]", "member" : "com.regularoddity.coveo.ServicesMap.replace", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#replace(k:String,v:com.regularoddity.coveo.Server):Option[com.regularoddity.coveo.Server]", "kind" : "def"}, {"label" : "replace", "tail" : "(k: String, oldvalue: Server, newvalue: Server): Boolean", "member" : "com.regularoddity.coveo.ServicesMap.replace", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#replace(k:String,oldvalue:com.regularoddity.coveo.Server,newvalue:com.regularoddity.coveo.Server):Boolean", "kind" : "def"}, {"label" : "remove", "tail" : "(k: String, v: Server): Boolean", "member" : "com.regularoddity.coveo.ServicesMap.remove", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#remove(k:String,v:com.regularoddity.coveo.Server):Boolean", "kind" : "def"}, {"label" : "putIfAbsent", "tail" : "(k: String, v: Server): Option[Server]", "member" : "com.regularoddity.coveo.ServicesMap.putIfAbsent", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#putIfAbsent(k:String,v:com.regularoddity.coveo.Server):Option[com.regularoddity.coveo.Server]", "kind" : "def"}, {"member" : "com.regularoddity.coveo.ServicesMap#<init>", "error" : "unsupported entity"}, {"label" : "getOrElseUpdate", "tail" : "(key: String, op: ⇒ Server): Server", "member" : "scala.collection.concurrent.Map.getOrElseUpdate", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#getOrElseUpdate(key:A,op:=>B):B", "kind" : "def"}, {"label" : "createNewEntry", "tail" : "(key: String, value: B1): Entry", "member" : "scala.collection.mutable.HashMap.createNewEntry", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#createNewEntry[B1](key:A,value:B1):HashMap.this.Entry", "kind" : "def"}, {"label" : "useSizeMap", "tail" : "(t: Boolean): Unit", "member" : "scala.collection.mutable.HashMap.useSizeMap", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#useSizeMap(t:Boolean):Unit", "kind" : "def"}, {"label" : "valuesIterator", "tail" : "(): Iterator[Server]", "member" : "scala.collection.mutable.HashMap.valuesIterator", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#valuesIterator:Iterator[B]", "kind" : "def"}, {"label" : "keysIterator", "tail" : "(): Iterator[String]", "member" : "scala.collection.mutable.HashMap.keysIterator", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#keysIterator:Iterator[A]", "kind" : "def"}, {"label" : "values", "tail" : "(): Iterable[Server]", "member" : "scala.collection.mutable.HashMap.values", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#values:Iterable[B]", "kind" : "def"}, {"label" : "keySet", "tail" : "(): Set[String]", "member" : "scala.collection.mutable.HashMap.keySet", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#keySet:scala.collection.Set[A]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: ((String, Server)) ⇒ U): Unit", "member" : "scala.collection.mutable.HashMap.foreach", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#foreach[U](f:((A,B))=>U):Unit", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[(String, Server)]", "member" : "scala.collection.mutable.HashMap.iterator", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#iterator:Iterator[(A,B)]", "kind" : "def"}, {"label" : "-=", "tail" : "(key: String): ServicesMap.this.type", "member" : "scala.collection.mutable.HashMap.-=", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#-=(key:A):HashMap.this.type", "kind" : "def"}, {"label" : "+=", "tail" : "(kv: (String, Server)): ServicesMap.this.type", "member" : "scala.collection.mutable.HashMap.+=", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#+=(kv:(A,B)):HashMap.this.type", "kind" : "def"}, {"label" : "remove", "tail" : "(key: String): Option[Server]", "member" : "scala.collection.mutable.HashMap.remove", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#remove(key:A):Option[B]", "kind" : "def"}, {"label" : "update", "tail" : "(key: String, value: Server): Unit", "member" : "scala.collection.mutable.HashMap.update", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#update(key:A,value:B):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(key: String, value: Server): Option[Server]", "member" : "scala.collection.mutable.HashMap.put", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#put(key:A,value:B):Option[B]", "kind" : "def"}, {"label" : "get", "tail" : "(key: String): Option[Server]", "member" : "scala.collection.mutable.HashMap.get", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#get(key:A):Option[B]", "kind" : "def"}, {"label" : "apply", "tail" : "(key: String): Server", "member" : "scala.collection.mutable.HashMap.apply", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#apply(key:A):B", "kind" : "def"}, {"label" : "contains", "tail" : "(key: String): Boolean", "member" : "scala.collection.mutable.HashMap.contains", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#contains(key:A):Boolean", "kind" : "def"}, {"label" : "par", "tail" : "(): ParHashMap[String, Server]", "member" : "scala.collection.mutable.HashMap.par", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#par:scala.collection.parallel.mutable.ParHashMap[A,B]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.mutable.HashMap.size", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#size:Int", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "scala.collection.mutable.HashMap.clear", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#clear():Unit", "kind" : "def"}, {"label" : "empty", "tail" : "(): HashMap[String, Server]", "member" : "scala.collection.mutable.HashMap.empty", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#empty:scala.collection.mutable.HashMap[A,B]", "kind" : "def"}, {"label" : "Entry", "tail" : "", "member" : "scala.collection.mutable.HashMap.Entry", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#Entry=scala.collection.mutable.DefaultEntry[A,B]", "kind" : "type"}, {"label" : "parCombiner", "tail" : "(): Combiner[(String, Server), ParHashMap[String, Server]]", "member" : "scala.collection.CustomParallelizable.parCombiner", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#parCombiner:scala.collection.parallel.Combiner[A,ParRepr]", "kind" : "def"}, {"label" : "initWithContents", "tail" : "(c: Contents[String, DefaultEntry[String, Server]]): Unit", "member" : "scala.collection.mutable.HashTable.initWithContents", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#initWithContents(c:scala.collection.mutable.HashTable.Contents[A,Entry]):Unit", "kind" : "def"}, {"label" : "index", "tail" : "(hcode: Int): Int", "member" : "scala.collection.mutable.HashTable.index", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#index(hcode:Int):Int", "kind" : "final def"}, {"label" : "elemEquals", "tail" : "(key1: String, key2: String): Boolean", "member" : "scala.collection.mutable.HashTable.elemEquals", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#elemEquals(key1:A,key2:A):Boolean", "kind" : "def"}, {"label" : "alwaysInitSizeMap", "tail" : "(): Boolean", "member" : "scala.collection.mutable.HashTable.alwaysInitSizeMap", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#alwaysInitSizeMap:Boolean", "kind" : "def"}, {"label" : "isSizeMapDefined", "tail" : "(): Boolean", "member" : "scala.collection.mutable.HashTable.isSizeMapDefined", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#isSizeMapDefined:Boolean", "kind" : "def"}, {"label" : "sizeMapDisable", "tail" : "(): Unit", "member" : "scala.collection.mutable.HashTable.sizeMapDisable", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#sizeMapDisable():Unit", "kind" : "def"}, {"label" : "sizeMapInitAndRebuild", "tail" : "(): Unit", "member" : "scala.collection.mutable.HashTable.sizeMapInitAndRebuild", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#sizeMapInitAndRebuild():Unit", "kind" : "def"}, {"label" : "sizeMapInit", "tail" : "(tableLength: Int): Unit", "member" : "scala.collection.mutable.HashTable.sizeMapInit", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#sizeMapInit(tableLength:Int):Unit", "kind" : "def"}, {"label" : "calcSizeMapSize", "tail" : "(tableLength: Int): Int", "member" : "scala.collection.mutable.HashTable.calcSizeMapSize", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#calcSizeMapSize(tableLength:Int):Int", "kind" : "def"}, {"label" : "nnSizeMapReset", "tail" : "(tableLength: Int): Unit", "member" : "scala.collection.mutable.HashTable.nnSizeMapReset", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#nnSizeMapReset(tableLength:Int):Unit", "kind" : "def"}, {"label" : "nnSizeMapRemove", "tail" : "(h: Int): Unit", "member" : "scala.collection.mutable.HashTable.nnSizeMapRemove", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#nnSizeMapRemove(h:Int):Unit", "kind" : "def"}, {"label" : "nnSizeMapAdd", "tail" : "(h: Int): Unit", "member" : "scala.collection.mutable.HashTable.nnSizeMapAdd", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#nnSizeMapAdd(h:Int):Unit", "kind" : "def"}, {"label" : "clearTable", "tail" : "(): Unit", "member" : "scala.collection.mutable.HashTable.clearTable", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#clearTable():Unit", "kind" : "def"}, {"label" : "foreachEntry", "tail" : "(f: (DefaultEntry[String, Server]) ⇒ U): Unit", "member" : "scala.collection.mutable.HashTable.foreachEntry", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#foreachEntry[U](f:Entry=>U):Unit", "kind" : "def"}, {"label" : "entriesIterator", "tail" : "(): Iterator[DefaultEntry[String, Server]]", "member" : "scala.collection.mutable.HashTable.entriesIterator", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#entriesIterator:Iterator[Entry]", "kind" : "def"}, {"label" : "removeEntry", "tail" : "(key: String): DefaultEntry[String, Server]", "member" : "scala.collection.mutable.HashTable.removeEntry", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#removeEntry(key:A):Entry", "kind" : "def"}, {"label" : "findOrAddEntry", "tail" : "(key: String, value: B): DefaultEntry[String, Server]", "member" : "scala.collection.mutable.HashTable.findOrAddEntry", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#findOrAddEntry[B](key:A,value:B):Entry", "kind" : "def"}, {"label" : "addEntry", "tail" : "(e: DefaultEntry[String, Server]): Unit", "member" : "scala.collection.mutable.HashTable.addEntry", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#addEntry(e:Entry):Unit", "kind" : "def"}, {"label" : "findEntry", "tail" : "(key: String): DefaultEntry[String, Server]", "member" : "scala.collection.mutable.HashTable.findEntry", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#findEntry(key:A):Entry", "kind" : "def"}, {"label" : "initialSize", "tail" : "(): Int", "member" : "scala.collection.mutable.HashTable.initialSize", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#initialSize:Int", "kind" : "def"}, {"label" : "tableSizeSeed", "tail" : "(): Int", "member" : "scala.collection.mutable.HashTable.tableSizeSeed", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#tableSizeSeed:Int", "kind" : "def"}, {"label" : "seedvalue", "tail" : ": Int", "member" : "scala.collection.mutable.HashTable.seedvalue", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#seedvalue:Int", "kind" : "val"}, {"label" : "sizemap", "tail" : ": Array[Int]", "member" : "scala.collection.mutable.HashTable.sizemap", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#sizemap:Array[Int]", "kind" : "val"}, {"label" : "threshold", "tail" : ": Int", "member" : "scala.collection.mutable.HashTable.threshold", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#threshold:Int", "kind" : "val"}, {"label" : "tableSize", "tail" : ": Int", "member" : "scala.collection.mutable.HashTable.tableSize", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#tableSize:Int", "kind" : "val"}, {"label" : "table", "tail" : ": Array[HashEntry[String, DefaultEntry[String, Server]]]", "member" : "scala.collection.mutable.HashTable.table", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#table:Array[scala.collection.mutable.HashEntry[A,Entry]]", "kind" : "val"}, {"label" : "_loadFactor", "tail" : ": Int", "member" : "scala.collection.mutable.HashTable._loadFactor", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#_loadFactor:Int", "kind" : "val"}, {"label" : "improve", "tail" : "(hcode: Int, seed: Int): Int", "member" : "scala.collection.mutable.HashTable.HashUtils.improve", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#improve(hcode:Int,seed:Int):Int", "kind" : "final def"}, {"label" : "elemHashCode", "tail" : "(key: String): Int", "member" : "scala.collection.mutable.HashTable.HashUtils.elemHashCode", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#elemHashCode(key:KeyType):Int", "kind" : "def"}, {"label" : "sizeMapBucketSize", "tail" : "(): Int", "member" : "scala.collection.mutable.HashTable.HashUtils.sizeMapBucketSize", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#sizeMapBucketSize:Int", "kind" : "final def"}, {"label" : "sizeMapBucketBitSize", "tail" : "(): Int", "member" : "scala.collection.mutable.HashTable.HashUtils.sizeMapBucketBitSize", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#sizeMapBucketBitSize:Int", "kind" : "final def"}, {"label" : "withDefaultValue", "tail" : "(d: Server): Map[String, Server]", "member" : "scala.collection.mutable.Map.withDefaultValue", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#withDefaultValue(d:V):scala.collection.mutable.Map[K,V]", "kind" : "def"}, {"label" : "withDefault", "tail" : "(d: (String) ⇒ Server): Map[String, Server]", "member" : "scala.collection.mutable.Map.withDefault", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#withDefault(d:K=>V):scala.collection.mutable.Map[K,V]", "kind" : "def"}, {"label" : "seq", "tail" : "(): Map[String, Server]", "member" : "scala.collection.mutable.Map.seq", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#seq:scala.collection.mutable.Map[K,V]", "kind" : "def"}, {"label" : "--", "tail" : "(xs: GenTraversableOnce[String]): HashMap[String, Server]", "member" : "scala.collection.mutable.MapLike.--", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#--(xs:scala.collection.GenTraversableOnce[K]):This", "kind" : "def"}, {"label" : "-", "tail" : "(elem1: String, elem2: String, elems: String*): HashMap[String, Server]", "member" : "scala.collection.mutable.MapLike.-", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#-(elem1:K,elem2:K,elems:K*):This", "kind" : "def"}, {"label" : "result", "tail" : "(): HashMap[String, Server]", "member" : "scala.collection.mutable.MapLike.result", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#result():This", "kind" : "def"}, {"label" : "clone", "tail" : "(): HashMap[String, Server]", "member" : "scala.collection.mutable.MapLike.clone", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#clone():This", "kind" : "def"}, {"label" : "retain", "tail" : "(p: (String, Server) ⇒ Boolean): ServicesMap.this.type", "member" : "scala.collection.mutable.MapLike.retain", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#retain(p:(K,V)=>Boolean):MapLike.this.type", "kind" : "def"}, {"label" : "transform", "tail" : "(f: (String, Server) ⇒ Server): ServicesMap.this.type", "member" : "scala.collection.mutable.MapLike.transform", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#transform(f:(K,V)=>V):MapLike.this.type", "kind" : "def"}, {"label" : "-", "tail" : "(key: String): HashMap[String, Server]", "member" : "scala.collection.mutable.MapLike.-", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#-(key:K):This", "kind" : "def"}, {"label" : "++", "tail" : "(xs: GenTraversableOnce[(String, V1)]): Map[String, V1]", "member" : "scala.collection.mutable.MapLike.++", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#++[V1>:V](xs:scala.collection.GenTraversableOnce[(K,V1)]):scala.collection.mutable.Map[K,V1]", "kind" : "def"}, {"label" : "+", "tail" : "(elem1: (String, V1), elem2: (String, V1), elems: (String, V1)*): Map[String, V1]", "member" : "scala.collection.mutable.MapLike.+", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#+[V1>:V](elem1:(K,V1),elem2:(K,V1),elems:(K,V1)*):scala.collection.mutable.Map[K,V1]", "kind" : "def"}, {"label" : "+", "tail" : "(kv: (String, V1)): Map[String, V1]", "member" : "scala.collection.mutable.MapLike.+", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#+[V1>:V](kv:(K,V1)):scala.collection.mutable.Map[K,V1]", "kind" : "def"}, {"label" : "updated", "tail" : "(key: String, value: V1): Map[String, V1]", "member" : "scala.collection.mutable.MapLike.updated", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#updated[V1>:V](key:K,value:V1):scala.collection.mutable.Map[K,V1]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[(String, Server)]", "member" : "scala.collection.mutable.MapLike.toSeq", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#toSeq:Seq[(K,V)]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[(String, Server), HashMap[String, Server]]", "member" : "scala.collection.mutable.MapLike.newBuilder", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#newBuilder:scala.collection.mutable.Builder[(K,V),This]", "kind" : "def"}, {"label" : "--=", "tail" : "(xs: TraversableOnce[String]): ServicesMap.this.type", "member" : "scala.collection.generic.Shrinkable.--=", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#--=(xs:scala.collection.TraversableOnce[A]):Shrinkable.this.type", "kind" : "def"}, {"label" : "-=", "tail" : "(elem1: String, elem2: String, elems: String*): ServicesMap.this.type", "member" : "scala.collection.generic.Shrinkable.-=", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#-=(elem1:A,elem2:A,elems:A*):Shrinkable.this.type", "kind" : "def"}, {"label" : "mapResult", "tail" : "(f: (HashMap[String, Server]) ⇒ NewTo): Builder[(String, Server), NewTo]", "member" : "scala.collection.mutable.Builder.mapResult", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#mapResult[NewTo](f:To=>NewTo):scala.collection.mutable.Builder[Elem,NewTo]", "kind" : "def"}, {"label" : "sizeHintBounded", "tail" : "(size: Int, boundingColl: TraversableLike[_, _]): Unit", "member" : "scala.collection.mutable.Builder.sizeHintBounded", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#sizeHintBounded(size:Int,boundingColl:scala.collection.TraversableLike[_,_]):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(coll: TraversableLike[_, _], delta: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#sizeHint(coll:scala.collection.TraversableLike[_,_],delta:Int):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(coll: TraversableLike[_, _]): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#sizeHint(coll:scala.collection.TraversableLike[_,_]):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(size: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#sizeHint(size:Int):Unit", "kind" : "def"}, {"label" : "++=", "tail" : "(xs: TraversableOnce[(String, Server)]): ServicesMap.this.type", "member" : "scala.collection.generic.Growable.++=", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#++=(xs:scala.collection.TraversableOnce[A]):Growable.this.type", "kind" : "def"}, {"label" : "+=", "tail" : "(elem1: (String, Server), elem2: (String, Server), elems: (String, Server)*): ServicesMap.this.type", "member" : "scala.collection.generic.Growable.+=", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#+=(elem1:A,elem2:A,elems:A*):Growable.this.type", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Iterable]", "member" : "scala.collection.mutable.Iterable.companion", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#companion:scala.collection.generic.GenericCompanion[scala.collection.mutable.Iterable]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.MapLike.toString", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#toString():String", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.MapLike.stringPrefix", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#stringPrefix:String", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.MapLike.addString", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[E]", "member" : "scala.collection.MapLike.toBuffer", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#toBuffer[E>:(K,V)]:scala.collection.mutable.Buffer[E]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: ((String, Server)) ⇒ Boolean): HashMap[String, Server]", "member" : "scala.collection.MapLike.filterNot", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#filterNot(p:((K,V))=>Boolean):This", "kind" : "def"}, {"label" : "mapValues", "tail" : "(f: (Server) ⇒ W): Map[String, W]", "member" : "scala.collection.MapLike.mapValues", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#mapValues[W](f:V=>W):scala.collection.Map[K,W]", "kind" : "def"}, {"label" : "filterKeys", "tail" : "(p: (String) ⇒ Boolean): Map[String, Server]", "member" : "scala.collection.MapLike.filterKeys", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#filterKeys(p:K=>Boolean):scala.collection.Map[K,V]", "kind" : "def"}, {"label" : "default", "tail" : "(key: String): Server", "member" : "scala.collection.MapLike.default", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#default(key:K):V", "kind" : "def"}, {"label" : "keys", "tail" : "(): Iterable[String]", "member" : "scala.collection.MapLike.keys", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#keys:Iterable[K]", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: K1, default: (K1) ⇒ V1): V1", "member" : "scala.collection.MapLike.applyOrElse", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#applyOrElse[K1<:K,V1>:V](x:K1,default:K1=>V1):V1", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(key: String): Boolean", "member" : "scala.collection.MapLike.isDefinedAt", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#isDefinedAt(key:K):Boolean", "kind" : "def"}, {"label" : "getOrElse", "tail" : "(key: String, default: ⇒ V1): V1", "member" : "scala.collection.MapLike.getOrElse", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#getOrElse[V1>:V](key:K,default:=>V1):V1", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.MapLike.isEmpty", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Server) ⇒ U): (String) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "lift", "tail" : "(): (String) ⇒ Option[Server]", "member" : "scala.PartialFunction.lift", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Server) ⇒ C): PartialFunction[String, C]", "member" : "scala.PartialFunction.andThen", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ String): (A) ⇒ Server", "member" : "scala.Function1.compose", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenMapLike.equals", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.GenMapLike.hashCode", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#hashCode():Int", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IterableView[(String, Server), HashMap[String, Server]]", "member" : "scala.collection.IterableLike.view", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#view(from:Int,until:Int):scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): IterableView[(String, Server), HashMap[String, Server]]", "member" : "scala.collection.IterableLike.view", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#view:scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[(String, Server)]", "member" : "scala.collection.IterableLike.toStream", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[HashMap[String, Server], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[HashMap[String, Server], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[HashMap[String, Server], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): HashMap[String, Server]", "member" : "scala.collection.IterableLike.dropRight", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): HashMap[String, Server]", "member" : "scala.collection.IterableLike.takeRight", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[HashMap[String, Server]]", "member" : "scala.collection.IterableLike.sliding", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[HashMap[String, Server]]", "member" : "scala.collection.IterableLike.sliding", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[HashMap[String, Server]]", "member" : "scala.collection.IterableLike.grouped", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: ((String, Server)) ⇒ Boolean): HashMap[String, Server]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): HashMap[String, Server]", "member" : "scala.collection.IterableLike.drop", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): HashMap[String, Server]", "member" : "scala.collection.IterableLike.take", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): HashMap[String, Server]", "member" : "scala.collection.IterableLike.slice", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): (String, Server)", "member" : "scala.collection.IterableLike.head", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[(String, Server)]", "member" : "scala.collection.IterableLike.toIterator", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[(String, Server)]", "member" : "scala.collection.IterableLike.toIterable", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: ((String, Server), B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: ((String, Server), B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: ((String, Server)) ⇒ Boolean): Option[(String, Server)]", "member" : "scala.collection.IterableLike.find", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: ((String, Server)) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: ((String, Server)) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: HashMap[String, Server]): Iterable[(String, Server)]", "member" : "scala.collection.IterableLike.toCollection", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#toCollection(repr:Repr):Iterable[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Iterable[(String, Server)]", "member" : "scala.collection.IterableLike.thisCollection", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#thisCollection:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: ((String, Server)) ⇒ GenTraversableOnce[B]): Iterable[Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: ((String, Server)) ⇒ GenTraversableOnce[B]): Iterable[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: ((String, Server)) ⇒ (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: ((String, Server)) ⇒ (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: ((String, Server)) ⇒ Boolean): FilterMonadic[(String, Server), HashMap[String, Server]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, (String, Server), Col[(String, Server)]]): Col[(String, Server)]", "member" : "scala.collection.TraversableLike.to", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[(String, Server)]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[HashMap[String, Server]]", "member" : "scala.collection.TraversableLike.inits", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[HashMap[String, Server]]", "member" : "scala.collection.TraversableLike.tails", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (HashMap[String, Server], HashMap[String, Server])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: ((String, Server)) ⇒ Boolean): (HashMap[String, Server], HashMap[String, Server])", "member" : "scala.collection.TraversableLike.span", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: ((String, Server)) ⇒ Boolean): HashMap[String, Server]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): HashMap[String, Server]", "member" : "scala.collection.TraversableLike.init", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[(String, Server)]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): (String, Server)", "member" : "scala.collection.TraversableLike.last", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): HashMap[String, Server]", "member" : "scala.collection.TraversableLike.tail", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[(String, Server)]", "member" : "scala.collection.TraversableLike.headOption", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: ((String, Server), B) ⇒ B)(bf: CanBuildFrom[HashMap[String, Server], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, (String, Server)) ⇒ B)(bf: CanBuildFrom[HashMap[String, Server], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[HashMap[String, Server], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: ((String, Server)) ⇒ K): Map[K, HashMap[String, Server]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: ((String, Server)) ⇒ Boolean): (HashMap[String, Server], HashMap[String, Server])", "member" : "scala.collection.TraversableLike.partition", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[(String, Server), B])(bf: CanBuildFrom[HashMap[String, Server], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filter", "tail" : "(p: ((String, Server)) ⇒ Boolean): HashMap[String, Server]", "member" : "scala.collection.TraversableLike.filter", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: ((String, Server)) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[HashMap[String, Server], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: ((String, Server)) ⇒ B)(bf: CanBuildFrom[HashMap[String, Server], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[HashMap[String, Server], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[HashMap[String, Server], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[HashMap[String, Server], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): HashMap[String, Server]", "member" : "scala.collection.TraversableLike.repr", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#Self=Repr", "kind" : "type"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[(String, Server), (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[(String, Server)]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[(String, Server)]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[(String, Server)]", "member" : "scala.collection.TraversableOnce.toList", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: ((String, Server)) ⇒ B)(cmp: Ordering[B]): (String, Server)", "member" : "scala.collection.TraversableOnce.minBy", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: ((String, Server)) ⇒ B)(cmp: Ordering[B]): (String, Server)", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): (String, Server)", "member" : "scala.collection.TraversableOnce.max", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): (String, Server)", "member" : "scala.collection.TraversableOnce.min", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, (String, Server)) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: ((String, Server), B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, (String, Server)) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, (String, Server)) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, (String, Server)) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: ((String, Server), B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, (String, Server)) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[(String, Server), B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: ((String, Server)) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[(String, Server)]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/ServicesMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/ServicesMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/regularoddity\/coveo\/ServicesMap.html", "kind" : "class"}, {"name" : "com.regularoddity.coveo.ServicesRegistry", "shortDescription" : "A registry of running services and configurations.", "object" : "com\/regularoddity\/coveo\/ServicesRegistry$.html", "members_object" : [{"label" : "conf", "tail" : ": ConfMap", "member" : "com.regularoddity.coveo.ServicesRegistry.conf", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html#conf:com.regularoddity.coveo.ConfMap", "kind" : "val"}, {"label" : "services", "tail" : ": ServicesMap", "member" : "com.regularoddity.coveo.ServicesRegistry.services", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html#services:com.regularoddity.coveo.ServicesMap", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/regularoddity\/coveo\/ServicesRegistry$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};